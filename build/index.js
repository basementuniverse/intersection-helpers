!function(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var n=e();for(var s in n)("object"==typeof exports?exports:t)[s]=n[s]}}(this,(()=>{return t={395:t=>{const e=(t,e=0,n=1)=>t<e?e:t>n?n:t,n=t=>t>=0?t-Math.floor(t):t-Math.ceil(t),s=(t,e,n)=>t+(e-t)*n,r=(t=.5,e=.5,n=2)=>{let s=0;for(let t=n;t--;)s+=Math.random();return t+(s-n/2)/(n/2)*e},i=t=>{let e=1;for(let n=2;n<=t;n++)e*=n;return e},o=(t,e)=>1===e?t.map((t=>[t])):t.reduce(((n,s,r)=>[...n,...o(t.slice(0,r).concat(t.slice(r+1)),e-1).map((t=>[s,...t]))]),[]),c=(t,e)=>1===e?t.map((t=>[t])):t.reduce(((n,s,r)=>[...n,...c(t.slice(r+1),e-1).map((t=>[s,...t]))]),[]),a=(t,e)=>Array(e).fill(0).map(((e,n)=>t(n))),u=(t,e=".")=>Object.keys(t).reduce(((n,s)=>{if(t[s]instanceof Date)return{...n,[s]:t[s].toISOString()};if("object"!=typeof t[s]||!t[s])return{...n,[s]:t[s]};const r=u(t[s],e);return{...n,...Object.keys(r).reduce(((t,n)=>({...t,[`${s}${e}${n}`]:r[n]})),{})}}),{});t.exports={memoize:t=>{var e={};return function(...n){return e[n]??(e[n]=t.apply(this,n))}},floatEquals:(t,e,n=Number.EPSILON)=>Math.abs(t-e)<n,clamp:e,frac:n,round:(t,e=0)=>{const n=Math.pow(10,e);return Math.round(t*n+Number.EPSILON)/n},lerp:s,unlerp:(t,e,n)=>(n-t)/(e-t),blerp:(t,e,n,r,i,o)=>s(s(t,e,i),s(n,r,i),o),remap:(t,e,n,s,r)=>s+(t-e)*(r-s)/(n-e),smoothstep:(t,e,n)=>s(t,e,3*Math.pow(n,2)-2*Math.pow(n,3)),radians:t=>Math.PI/180*t,degrees:t=>180/Math.PI*t,randomBetween:(t,e)=>Math.random()*(e-t)+t,randomIntBetween:(t,e)=>Math.floor(Math.random()*(e-t+1))+t,cltRandom:r,cltRandomInt:(t,e)=>Math.floor(t+r(.5,.5,2)*(e+1-t)),weightedRandom:t=>{let e=t.reduce(((t,e)=>t+e),0),n=0;const s=Math.random()*e;for(;e>s;)e-=t[n++];return n-1},lerpArray:(t,r,i=s)=>{const o=r*(t.length-1),c=e(Math.trunc(o),0,t.length-1);return i(t[c]||0,t[c+1]||0,n(o))},dot:(t,e)=>t.reduce(((t,n,s)=>t+n*e[s]),0),factorial:i,npr:(t,e)=>i(t)/i(t-e),ncr:(t,e)=>i(t)/(i(e)*i(t-e)),permutations:o,combinations:c,cartesian:(...t)=>t.reduce(((t,e)=>t.flatMap((t=>e.map((e=>[...t,e]))))),[[]]),times:a,range:t=>a((t=>t),t),zip:(...t)=>a((e=>t.map((t=>t[e]))),Math.max(...t.map((t=>t.length)))),at:(t,e)=>t[e<0?t.length-Math.abs(e+1)%t.length-1:e%t.length],peek:t=>{if(t.length)return t[t.length-1]},ind:(t,e,n)=>t+e*n,pos:(t,e)=>[t%e,Math.floor(t/e)],chunk:(t,e)=>a((n=>t.slice(n*e,n*e+e)),Math.ceil(t.length/e)),shuffle:t=>t.slice().sort((()=>Math.random()-.5)),flat:u,unflat:(t,e=".")=>{let n,s,r,i,o={};for(r in t){for(s=r.split(e),n=o,i=0;i<s.length-1;i++)s[i]in n||(isFinite(s[i+1])?n[s[i]]=[]:n[s[i]]={}),n=n[s[i]];n[s[s.length-1]]=t[r]}return o},split:(t,e)=>{const n=[];let s=[];for(const r of t)e(r)?(s.length&&n.push(s),s=[r]):s.push(r);return n.push(s),n},pluck:(t,...e)=>e.reduce(((e,n)=>Object.assign(e,{[n]:t[n]})),{}),exclude:(t,...e)=>Object.fromEntries(Object.entries(t).filter((([t])=>!e.includes(t))))}},430:t=>{const e=(t,e)=>Array(e).fill(0).map(((e,n)=>t(n))),n=(t,e)=>t.reduce(((t,n,s)=>t+n*e[s]),0),s=t=>"object"==typeof t&&"x"in t&&"y"in t,r=t=>"object"==typeof t&&"x"in t&&"y"in t&&"z"in t,i=(t,e)=>t||e?s(t)?{x:t.x||0,y:t.y||0}:{x:t,y:e??t}:{x:0,y:0};i.components=t=>[t.x,t.y],i.fromComponents=t=>i(...t.slice(0,2)),i.ux=()=>i(1,0),i.uy=()=>i(0,1),i.add=(t,e)=>({x:t.x+(e.x??e),y:t.y+(e.y??e)}),i.sub=(t,e)=>({x:t.x-(e.x??e),y:t.y-(e.y??e)}),i.mul=(t,e)=>({x:t.x*(e.x??e),y:t.y*(e.y??e)}),i.scale=(t,e)=>i.mul(t,e),i.div=(t,e)=>({x:t.x/(e.x??e),y:t.y/(e.y??e)}),i.len=t=>Math.sqrt(t.x*t.x+t.y*t.y),i.manhattan=t=>Math.abs(t.x)+Math.abs(t.y),i.nor=t=>{let e=i.len(t);return e?{x:t.x/e,y:t.y/e}:i()},i.dot=(t,e)=>t.x*e.x+t.y*e.y,i.rot=(t,e)=>{let n=Math.sin(e),s=Math.cos(e);return{x:s*t.x-n*t.y,y:n*t.x+s*t.y}},i.rotf=(t,e)=>{switch(e){case 1:return i(t.y,-t.x);case-1:return i(-t.y,t.x);case 2:case-2:return i(-t.x,-t.y);default:return t}},i.cross=(t,e)=>t.x*e.y-t.y*e.x,i.eq=(t,e)=>t.x===e.x&&t.y===e.y,i.rad=t=>Math.atan2(t.y,t.x),i.cpy=t=>i(t),i.map=(t,e)=>({x:e(t.x,"x"),y:e(t.y,"y")}),i.str=(t,e=", ")=>`${t.x}${e}${t.y}`,i.swiz=(t,e="..")=>{const n=[];return e.split("").forEach(((e,s)=>{switch(e){case"x":case"u":n.push(t.x);break;case"y":case"v":n.push(t.y);break;case"X":case"U":n.push(-t.x);break;case"Y":case"V":n.push(-t.y);break;case"0":default:n.push(0);break;case"1":n.push(1);break;case".":n.push([t.x,t.y][s]??0)}})),n},i.polar=t=>({r:i.len(t),theta:Math.atan2(t.y,t.x)}),i.fromPolar=(t,e)=>i(t*Math.cos(e),t*Math.sin(e));const o=(t,e,n)=>t||e||n?r(t)?{x:t.x||0,y:t.y||0,z:t.z||0}:s(t)?{x:t.x||0,y:t.y||0,z:e||0}:{x:t,y:e??t,z:n??t}:{x:0,y:0,z:0};o.components=t=>[t.x,t.y,t.z],o.fromComponents=t=>o(...t.slice(0,3)),o.ux=()=>o(1,0,0),o.uy=()=>o(0,1,0),o.uz=()=>o(0,0,1),o.add=(t,e)=>({x:t.x+(e.x??e),y:t.y+(e.y??e),z:t.z+(e.z??e)}),o.sub=(t,e)=>({x:t.x-(e.x??e),y:t.y-(e.y??e),z:t.z-(e.z??e)}),o.mul=(t,e)=>({x:t.x*(e.x??e),y:t.y*(e.y??e),z:t.z*(e.z??e)}),o.scale=(t,e)=>o.mul(t,e),o.div=(t,e)=>({x:t.x/(e.x??e),y:t.y/(e.y??e),z:t.z/(e.z??e)}),o.len=t=>Math.sqrt(t.x*t.x+t.y*t.y+t.z*t.z),o.manhattan=t=>Math.abs(t.x)+Math.abs(t.y)+Math.abs(t.z),o.nor=t=>{let e=o.len(t);return e?{x:t.x/e,y:t.y/e,z:t.z/e}:o()},o.dot=(t,e)=>t.x*e.x+t.y*e.y+t.z*e.z,o.rot=(t,e)=>o(o.dot(o.fromComponents(c.row(e,1)),t),o.dot(o.fromComponents(c.row(e,2)),t),o.dot(o.fromComponents(c.row(e,3)),t)),o.rotx=(t,e)=>o(t.x,t.y*Math.cos(e)-t.z*Math.sin(e),t.y*Math.sin(e)+t.z*Math.cos(e)),o.roty=(t,e)=>o(t.x*Math.cos(e)+t.z*Math.sin(e),t.y,-t.x*Math.sin(e)+t.z*Math.cos(e)),o.rotz=(t,e)=>o(t.x*Math.cos(e)-t.y*Math.sin(e),t.x*Math.sin(e)+t.y*Math.cos(e),t.z),o.rotq=(t,e)=>{if(4!==e.length)return o();const n=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]+e[3]*e[3]);if(0===n)return o();const s=[e[0]/n,e[1]/n,e[2]/n,e[3]/n],r=o(...s.slice(0,3)),i=s[3];return o.add(o.add(o.mul(r,2*o.dot(r,t)),o.mul(t,i*i-o.dot(r,r))),o.mul(o.cross(r,t),2*i))},o.rota=(t,e)=>o.rotz(o.roty(o.rotx(t,e.x),e.y),e.z),o.cross=(t,e)=>o(t.y*e.z-t.z*e.y,t.z*e.x-t.x*e.z,t.x*e.y-t.y*e.x),o.eq=(t,e)=>t.x===e.x&&t.y===e.y&&t.z===e.z,o.radx=t=>Math.atan2(t.z,t.y),o.rady=t=>Math.atan2(t.x,t.y),o.radz=t=>Math.atan2(t.y,t.z),o.cpy=t=>o(t),o.map=(t,e)=>({x:e(t.x,"x"),y:e(t.y,"y"),z:e(t.z,"z")}),o.str=(t,e=", ")=>`${t.x}${e}${t.y}${e}${t.z}`,o.swiz=(t,e="...")=>{const n=[];return e.split("").forEach(((e,s)=>{switch(e){case"x":case"u":case"r":n.push(t.x);break;case"y":case"v":case"g":n.push(t.y);break;case"z":case"w":case"b":n.push(t.z);break;case"X":case"U":case"R":n.push(-t.x);break;case"Y":case"V":case"G":n.push(-t.y);break;case"Z":case"W":case"B":n.push(-t.z);break;case"0":default:n.push(0);break;case"1":n.push(1);break;case".":n.push([t.x,t.y,t.z][s]??0)}})),n},o.polar=t=>{let e=o.len(t);return{r:e,theta:Math.acos(t.y/e),phi:Math.atan2(t.z,t.x)}},o.fromPolar=(t,e,n)=>{const s=Math.sin(e);return o(t*s*Math.cos(n),t*Math.cos(e),t*s*Math.sin(n))};const c=(t=4,e=4,n=[])=>({m:t,n:e,entries:n.concat(Array(t*e).fill(0)).slice(0,t*e)});c.identity=t=>c(t,t,Array(t*t).fill(0).map(((e,n)=>+(Math.floor(n/t)===n%t)))),c.get=(t,e,n)=>t.entries[n-1+(e-1)*t.n],c.set=(t,e,n,s)=>{t.entries[n-1+(e-1)*t.n]=s},c.row=(t,e)=>{const n=(e-1)*t.n;return t.entries.slice(n,n+t.n)},c.col=(t,n)=>e((e=>c.get(t,e+1,n)),t.m),c.add=(t,e)=>t.m===e.m&&t.n===e.n&&c.map(t,((t,n)=>t+e.entries[n])),c.sub=(t,e)=>t.m===e.m&&t.n===e.n&&c.map(t,((t,n)=>t-e.entries[n])),c.mul=(t,e)=>{if(t.n!==e.m)return!1;const s=c(t.m,e.n);for(let r=1;r<=t.m;r++)for(let i=1;i<=e.n;i++)c.set(s,r,i,n(c.row(t,r),c.col(e,i)));return s},c.mulv=(t,e)=>{let a,u,v;if(r(e)?(u=o.components(e),a=3,v=o.fromComponents):s(e)?(u=i.components(e),a=2,v=i.fromComponents):(u=e,a=e.length??0,v=t=>t),t.n!==a)return!1;const l=[];for(let e=1;e<=t.m;e++)l.push(n(c.row(t,e),u));return v(l)},c.scale=(t,e)=>c.map(t,(t=>t*e)),c.trans=t=>c(t.n,t.m,e((e=>c.col(t,e+1)),t.n).flat()),c.minor=(t,e,n)=>{if(t.m!==t.n)return!1;const s=[];for(let r=1;r<=t.m;r++)if(r!==e)for(let e=1;e<=t.n;e++)e!==n&&s.push(c.get(t,r,e));return c(t.m-1,t.n-1,s)},c.det=t=>{if(t.m!==t.n)return!1;if(1===t.m)return t.entries[0];if(2===t.m)return t.entries[0]*t.entries[3]-t.entries[1]*t.entries[2];let e=0,n=1;for(let s=1;s<=t.n;s++)e+=n*t.entries[s-1]*c.det(c.minor(t,1,s)),n*=-1;return e},c.nor=t=>{if(t.m!==t.n)return!1;const e=c.det(t);return c.map(t,(t=>t*e))},c.adj=t=>{const e=c(t.m,t.n);for(let n=1;n<=t.m;n++)for(let s=1;s<=t.n;s++)c.set(e,n,s,c.det(c.minor(t,n,s)));const n=c.map(e,((t,e)=>t*(e%2?-1:1)));return c.trans(n)},c.inv=t=>{if(t.m!==t.n)return!1;const e=c.det(t);return 0!==e&&c.scale(c.adj(t),1/e)},c.eq=(t,e)=>t.m===e.m&&t.n===e.n&&c.str(t)===c.str(e),c.cpy=t=>c(t.m,t.n,[...t.entries]),c.map=(t,e)=>c(t.m,t.n,t.entries.map(e)),c.str=(t,n=", ",s="\n")=>((t,n)=>e((e=>t.slice(e*n,e*n+n)),Math.ceil(t.length/n)))(t.entries,t.n).map((t=>t.join(n))).join(s),t.exports={vec2:i,vec3:o,mat:c}},513:t=>{function e(t,e,n){n=n||0;var s,r,i,o,c,a,u,v=[0,0];return s=t[1][1]-t[0][1],r=t[0][0]-t[1][0],i=s*t[0][0]+r*t[0][1],o=e[1][1]-e[0][1],c=e[0][0]-e[1][0],a=o*e[0][0]+c*e[0][1],z(u=s*c-o*r,0,n)||(v[0]=(c*i-r*a)/u,v[1]=(s*a-o*i)/u),v}function n(t,e,n,s){var r=e[0]-t[0],i=e[1]-t[1],o=s[0]-n[0],c=s[1]-n[1];if(o*i-c*r==0)return!1;var a=(r*(n[1]-t[1])+i*(t[0]-n[0]))/(o*i-c*r),u=(o*(t[1]-n[1])+c*(n[0]-t[0]))/(c*r-o*i);return a>=0&&a<=1&&u>=0&&u<=1}function s(t,e,n){return(e[0]-t[0])*(n[1]-t[1])-(n[0]-t[0])*(e[1]-t[1])}function r(t,e,n){return s(t,e,n)>0}function i(t,e,n){return s(t,e,n)>=0}function o(t,e,n){return s(t,e,n)<0}function c(t,e,n){return s(t,e,n)<=0}t.exports={decomp:function(t){var e=g(t);return e.length>0?M(t,e):[t]},quickDecomp:function t(e,n,s,a,u,v,m){v=v||100,m=m||0,u=u||25,n=void 0!==n?n:[],s=s||[],a=a||[];var p=[0,0],y=[0,0],x=[0,0],g=0,M=0,z=0,I=0,O=0,E=0,S=0,L=[],N=[],w=e,A=e;if(A.length<3)return n;if(++m>v)return console.warn("quickDecomp: max level ("+v+") reached."),n;for(var j=0;j<e.length;++j)if(h(w,j)){s.push(w[j]),g=M=Number.MAX_VALUE;for(var _=0;_<e.length;++_)r(d(w,j-1),d(w,j),d(w,_))&&c(d(w,j-1),d(w,j),d(w,_-1))&&(x=P(d(w,j-1),d(w,j),d(w,_),d(w,_-1)),o(d(w,j+1),d(w,j),x)&&(z=l(w[j],x))<M&&(M=z,y=x,E=_)),r(d(w,j+1),d(w,j),d(w,_+1))&&c(d(w,j+1),d(w,j),d(w,_))&&(x=P(d(w,j+1),d(w,j),d(w,_),d(w,_+1)),r(d(w,j-1),d(w,j),x)&&(z=l(w[j],x))<g&&(g=z,p=x,O=_));if(E===(O+1)%e.length)x[0]=(y[0]+p[0])/2,x[1]=(y[1]+p[1])/2,a.push(x),j<O?(f(L,w,j,O+1),L.push(x),N.push(x),0!==E&&f(N,w,E,w.length),f(N,w,0,j+1)):(0!==j&&f(L,w,j,w.length),f(L,w,0,O+1),L.push(x),N.push(x),f(N,w,E,j+1));else{if(E>O&&(O+=e.length),I=Number.MAX_VALUE,O<E)return n;for(_=E;_<=O;++_)i(d(w,j-1),d(w,j),d(w,_))&&c(d(w,j+1),d(w,j),d(w,_))&&(z=l(d(w,j),d(w,_)))<I&&b(w,j,_)&&(I=z,S=_%e.length);j<S?(f(L,w,j,S+1),0!==S&&f(N,w,S,A.length),f(N,w,0,j+1)):(0!==j&&f(L,w,j,A.length),f(L,w,0,S+1),f(N,w,S,j+1))}return L.length<N.length?(t(L,n,s,a,u,v,m),t(N,n,s,a,u,v,m)):(t(N,n,s,a,u,v,m),t(L,n,s,a,u,v,m)),n}return n.push(e),n},isSimple:function(t){var e,s=t;for(e=0;e<s.length-1;e++)for(var r=0;r<e-1;r++)if(n(s[e],s[e+1],s[r],s[r+1]))return!1;for(e=1;e<s.length-2;e++)if(n(s[0],s[s.length-1],s[e],s[e+1]))return!1;return!0},removeCollinearPoints:function(t,e){for(var n=0,s=t.length-1;t.length>3&&s>=0;--s)v(d(t,s-1),d(t,s),d(t,s+1),e)&&(t.splice(s%t.length,1),n++);return n},removeDuplicatePoints:function(t,e){for(var n=t.length-1;n>=1;--n)for(var s=t[n],r=n-1;r>=0;--r)I(s,t[r],e)&&t.splice(n,1)},makeCCW:function(t){for(var e=0,n=t,s=1;s<t.length;++s)(n[s][1]<n[e][1]||n[s][1]===n[e][1]&&n[s][0]>n[e][0])&&(e=s);return!r(d(t,e-1),d(t,e),d(t,e+1))&&(function(t){for(var e=[],n=t.length,s=0;s!==n;s++)e.push(t.pop());for(s=0;s!==n;s++)t[s]=e[s]}(t),!0)}};var a=[],u=[];function v(t,e,n,r){if(r){var i=a,o=u;i[0]=e[0]-t[0],i[1]=e[1]-t[1],o[0]=n[0]-e[0],o[1]=n[1]-e[1];var c=i[0]*o[0]+i[1]*o[1],v=Math.sqrt(i[0]*i[0]+i[1]*i[1]),l=Math.sqrt(o[0]*o[0]+o[1]*o[1]);return Math.acos(c/(v*l))<r}return 0===s(t,e,n)}function l(t,e){var n=e[0]-t[0],s=e[1]-t[1];return n*n+s*s}function d(t,e){var n=t.length;return t[e<0?e%n+n:e%n]}function f(t,e,n,s){for(var r=n;r<s;r++)t.push(e[r])}function h(t,e){return o(d(t,e-1),d(t,e),d(t,e+1))}var m=[],p=[];function y(t,n,s){var r,o,a=m,u=p;if(i(d(t,n+1),d(t,n),d(t,s))&&c(d(t,n-1),d(t,n),d(t,s)))return!1;o=l(d(t,n),d(t,s));for(var v=0;v!==t.length;++v)if((v+1)%t.length!==n&&v!==n&&i(d(t,n),d(t,s),d(t,v+1))&&c(d(t,n),d(t,s),d(t,v))&&(a[0]=d(t,n),a[1]=d(t,s),u[0]=d(t,v),u[1]=d(t,v+1),r=e(a,u),l(d(t,n),r)<o))return!1;return!0}function b(t,e,s){for(var r=0;r!==t.length;++r)if(r!==e&&r!==s&&(r+1)%t.length!==e&&(r+1)%t.length!==s&&n(d(t,e),d(t,s),d(t,r),d(t,r+1)))return!1;return!0}function x(t,e,n,s){var r=s||[];if(function(t){t.length=0}(r),e<n)for(var i=e;i<=n;i++)r.push(t[i]);else{for(i=0;i<=n;i++)r.push(t[i]);for(i=e;i<t.length;i++)r.push(t[i])}return r}function g(t){for(var e=[],n=[],s=[],r=[],i=Number.MAX_VALUE,o=0;o<t.length;++o)if(h(t,o))for(var c=0;c<t.length;++c)if(y(t,o,c)){n=g(x(t,o,c,r)),s=g(x(t,c,o,r));for(var a=0;a<s.length;a++)n.push(s[a]);n.length<i&&(e=n,i=n.length,e.push([d(t,o),d(t,c)]))}return e}function M(t,e){if(0===e.length)return[t];if(e instanceof Array&&e.length&&e[0]instanceof Array&&2===e[0].length&&e[0][0]instanceof Array){for(var n=[t],s=0;s<e.length;s++)for(var r=e[s],i=0;i<n.length;i++){var o=M(n[i],r);if(o){n.splice(i,1),n.push(o[0],o[1]);break}}return n}return r=e,s=t.indexOf(r[0]),i=t.indexOf(r[1]),-1!==s&&-1!==i&&[x(t,s,i),x(t,i,s)]}function P(t,e,n,s,r){r=r||0;var i=e[1]-t[1],o=t[0]-e[0],c=i*t[0]+o*t[1],a=s[1]-n[1],u=n[0]-s[0],v=a*n[0]+u*n[1],l=i*u-a*o;return z(l,0,r)?[0,0]:[(u*c-o*v)/l,(i*v-a*c)/l]}function z(t,e,n){return n=n||0,Math.abs(t-e)<=n}function I(t,e,n){return z(t[0],e[0],n)&&z(t[1],e[1],n)}},674:function(t,e,n){"use strict";var s,r=this&&this.__createBinding||(Object.create?function(t,e,n,s){void 0===s&&(s=n);var r=Object.getOwnPropertyDescriptor(e,n);r&&!("get"in r?!e.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return e[n]}}),Object.defineProperty(t,s,r)}:function(t,e,n,s){void 0===s&&(s=n),t[s]=e[n]}),i=this&&this.__setModuleDefault||(Object.create?function(t,e){Object.defineProperty(t,"default",{enumerable:!0,value:e})}:function(t,e){t.default=e}),o=this&&this.__importStar||(s=function(t){return s=Object.getOwnPropertyNames||function(t){var e=[];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[e.length]=n);return e},s(t)},function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n=s(t),o=0;o<n.length;o++)"default"!==n[o]&&r(e,t,n[o]);return i(e,t),e}),c=this&&this.__exportStar||function(t,e){for(var n in t)"default"===n||Object.prototype.hasOwnProperty.call(e,n)||r(e,t,n)};Object.defineProperty(e,"__esModule",{value:!0}),e.distance=function(t,e){return u.vec2.len(u.vec2.sub(t,e))},e.angle=function(t,e){if((0,l.vectorsAlmostEqual)(t,e))return 0;const n=u.vec2.rad(u.vec2.sub(e,t))%(2*Math.PI);return n<0?n+2*Math.PI:n},e.angleBetween=function(t,e){let n=(0,f.isRay)(t)?m(t,1):t,s=(0,f.isRay)(e)?m(e,1):e;if((0,l.vectorAlmostZero)(u.vec2.sub(n.end,n.start))||(0,l.vectorAlmostZero)(u.vec2.sub(s.end,s.start)))return 0;const r=u.vec2.nor(u.vec2.sub(n.end,n.start)),i=u.vec2.nor(u.vec2.sub(s.end,s.start)),o=(0,a.clamp)(u.vec2.dot(r,i),-1,1),c=u.vec2.cross(r,i),v=Math.atan2(c,o);return v<0?v+2*Math.PI:v},e.pointsAreCollinear=h,e.lineToRay=function(t){return{origin:t.start,direction:u.vec2.nor(u.vec2.sub(t.end,t.start))}},e.rayToLine=m,e.aabb=function(t){if((0,f.isLine)(t))return{position:(0,u.vec2)(Math.min(t.start.x,t.end.x),Math.min(t.start.y,t.end.y)),size:(0,u.vec2)(Math.abs(t.end.x-t.start.x),Math.abs(t.end.y-t.start.y))};if((0,f.isRectangle)(t)){const e=y(t),n=(0,u.vec2)(Math.min(...e.map((t=>t.x))),Math.min(...e.map((t=>t.y))));return{position:n,size:(0,u.vec2)(Math.max(...e.map((t=>t.x)))-n.x,Math.max(...e.map((t=>t.y)))-n.y)}}if((0,f.isCircle)(t))return{position:u.vec2.sub(t.position,(0,u.vec2)(t.radius,t.radius)),size:(0,u.vec2)(2*t.radius)};if((0,f.isPolygon)(t)){const e=(0,u.vec2)(Math.min(...t.vertices.map((t=>t.x))),Math.min(...t.vertices.map((t=>t.y))));return{position:e,size:(0,u.vec2)(Math.max(...t.vertices.map((t=>t.x)))-e.x,Math.max(...t.vertices.map((t=>t.y)))-e.y)}}return null},e.aabbToRectangle=function(t){return{position:u.vec2.add(t.position,u.vec2.div(t.size,2)),size:t.size,rotation:0}},e.aabbsOverlap=function(t,e){const n=(0,l.overlapInterval)({min:t.position.x,max:t.position.x+t.size.x},{min:e.position.x,max:e.position.x+e.size.x}),s=(0,l.overlapInterval)({min:t.position.y,max:t.position.y+t.size.y},{min:e.position.y,max:e.position.y+e.size.y});return n&&s?{intersects:!0,overlap:{position:(0,u.vec2)(n.min,s.min),size:(0,u.vec2)(n.max-n.min,s.max-s.min)}}:{intersects:!1}},e.pointInAABB=function(t,e){const{position:n,size:s}=e,r=n,i=u.vec2.add(n,s),o=(0,l.valueInInterval)(t.x,{min:r.x,max:i.x})&&(0,l.valueInInterval)(t.y,{min:r.y,max:i.y});let c;if(o){const e=[{x:r.x,y:t.y,d:Math.abs(t.x-r.x)},{x:i.x,y:t.y,d:Math.abs(t.x-i.x)},{x:t.x,y:r.y,d:Math.abs(t.y-r.y)},{x:t.x,y:i.y,d:Math.abs(t.y-i.y)}].reduce(((t,e)=>t.d<e.d?t:e));c=(0,u.vec2)(e.x,e.y)}else c=(0,u.vec2)((0,a.clamp)(t.x,r.x,i.x),(0,a.clamp)(t.y,r.y,i.y));const v=u.vec2.len(u.vec2.sub(t,c));return{intersects:o,closestPoint:c,distance:o?-v:v}},e.rectangleIsRotated=p,e.rectangleVertices=y,e.verticesToEdges=b,e.polygonIsConvex=g,e.polygonSelfIntersects=M,e.polygonIsValid=P,e.polygonWindingOrder=z,e.polygonArea=function(t){if(!P(t))return null;let e=0;for(let n=0;n<t.vertices.length;n++){const s=t.vertices[n],r=(0,a.at)(t.vertices,n+1);e+=u.vec2.cross(s,r)}return Math.abs(e)/2},e.polygonCentroid=I,e.polygonConvexHull=function(t,e){var n;if(!P(t))return null;if(g(t))return t;const s=null===(n=null==e?void 0:e.keepWindingOrder)||void 0===n||n,r=z(t),i=[...t.vertices].sort(((t,e)=>t.x!==e.x?t.x-e.x:t.y-e.y)),o=[];for(const t of i){for(;o.length>=2&&u.vec2.cross(u.vec2.sub(o[o.length-1],o[o.length-2]),u.vec2.sub(t,o[o.length-1]))<=0;)o.pop();o.push(t)}const c=[];for(let t=i.length-1;t>=0;--t){const e=i[t];for(;c.length>=2&&u.vec2.cross(u.vec2.sub(c[c.length-1],c[c.length-2]),u.vec2.sub(e,c[c.length-1]))<=0;)c.pop();c.push(e)}o.pop(),c.pop();const a=o.concat(c);return a.length<3?null:(s&&z({vertices:a})!==r&&a.reverse(),{vertices:O(a)})},e.optimisePolygon=function(t){if(t.vertices.length<3)return null;const e=function(t){const e=[],n=t.length;for(let s=0;s<n;s++){const n=(0,a.at)(t,s-1),r=t[s];h(n,r,(0,a.at)(t,s+1))||e.push(r)}return e}(function(t){const e=[],n=t.length;for(let s=0;s<n;s++){const n=t[s],r=(0,a.at)(t,s+1);(0,l.vectorsAlmostEqual)(n,r)||e.push(n)}return e}(t.vertices));return e.length<3?null:{vertices:e}},e.decomposePolygon=E,e.pointOnRay=function(t,e){const n=u.vec2.sub(t,e.origin),s=u.vec2.nor(e.direction),r=u.vec2.dot(n,s),i=u.vec2.add(e.origin,u.vec2.mul(s,Math.max(0,r))),o=u.vec2.len(u.vec2.sub(t,i));return{intersects:o<d.EPSILON&&r>=0,closestPoint:i,distance:o}},e.pointOnLine=S,e.pointInCircle=L,e.pointInRectangle=N,e.pointInPolygon=w,e.rayTraverseGrid=function(t,e,n,s,r=-1){if(e<=0)return{cells:[]};if((r=(0,a.clamp)(-1===r?1e4:r,0,1e4))<=0)return{cells:[]};n=u.vec2.map(n,Math.floor),s=u.vec2.map(s,Math.ceil);const i=u.vec2.nor(t.direction);if((0,l.vectorAlmostZero)(i))return{cells:[]};const o=[];let c=u.vec2.map(u.vec2.div(u.vec2.sub(t.origin,n),e),Math.floor);const v=u.vec2.sub(s,n);if(c.x<0||c.x>=v.x||c.y<0||c.y>=v.y){const r=j(t,{position:u.vec2.add(n,u.vec2.div(u.vec2.sub(s,n),2)),size:u.vec2.sub(s,n)});if(!r.intersects||!r.intersectionPoints)return{cells:o};const i=r.intersectionPoints[0];if(c=u.vec2.map(u.vec2.div(u.vec2.sub(i,n),e),Math.floor),c.x<0||c.x>=v.x||c.y<0||c.y>=v.y)return{cells:o}}const f=Math.sign(i.x),h=Math.sign(i.y),m={x:0!==i.x?Math.abs(e/i.x):1/0,y:0!==i.y?Math.abs(e/i.y):1/0},p=(0,u.vec2)(n.x+(c.x+(f>0?1:0))*e,n.y+(c.y+(h>0?1:0))*e),y={x:0!==i.x?Math.abs((p.x-t.origin.x)/i.x):1/0,y:0!==i.y?Math.abs((p.y-t.origin.y)/i.y):1/0};Math.abs(t.origin.x-p.x)<d.EPSILON&&(y.x=m.x),Math.abs(t.origin.y-p.y)<d.EPSILON&&(y.y=m.y),o.push((0,u.vec2)(c.x,c.y));let b=1;for(;b<r&&c.x>=0&&c.x<v.x&&c.y>=0&&c.y<v.y&&(y.x<y.y?(y.x+=m.x,c.x+=f):(y.y+=m.y,c.y+=h),!(c.x<0||c.x>=v.x||c.y<0||c.y>=v.y));)o.push((0,u.vec2)(c.x,c.y)),b++;return{cells:o}},e.rayIntersectsRay=function(t,e){const n=u.vec2.nor(t.direction),s=u.vec2.nor(e.direction);if((0,l.vectorAlmostZero)(n)||(0,l.vectorAlmostZero)(s))return{intersects:!1};const r=u.vec2.cross(n,s),i=u.vec2.sub(e.origin,t.origin);if(Math.abs(r)<d.EPSILON){if(Math.abs(u.vec2.cross(i,n))<d.EPSILON){const t=u.vec2.dot(i,n);if((t<=0||t>=0)&&u.vec2.dot(n,s)>1-d.EPSILON)return{intersects:!0}}return{intersects:!1}}const o=u.vec2.cross(i,s)/r,c=u.vec2.cross(i,n)/r;return o>=0&&c>=0?{intersects:!0,intersectionPoint:u.vec2.add(t.origin,u.vec2.mul(n,o))}:{intersects:!1}},e.rayIntersectsLine=A,e.rayIntersectsCircle=function(t,e){const n=u.vec2.nor(t.direction),s=u.vec2.sub(e.position,t.origin),r=u.vec2.dot(n,n),i=2*u.vec2.dot(n,u.vec2.mul(s,-1)),o=i*i-4*r*(u.vec2.dot(s,s)-e.radius*e.radius);if(o<-d.EPSILON)return{intersects:!1};if(Math.abs(o)<d.EPSILON){const e=-i/(2*r);return e>=0?{intersects:!0,intersectionPoints:[u.vec2.add(t.origin,u.vec2.mul(n,e))]}:{intersects:!1}}const c=Math.sqrt(o),a=(-i-c)/(2*r),v=(-i+c)/(2*r);if(v<0)return{intersects:!1};let l=[];return a>=0&&l.push(u.vec2.add(t.origin,u.vec2.mul(n,a))),v>=0&&l.push(u.vec2.add(t.origin,u.vec2.mul(n,v))),l=O(l),{intersects:l.length>0,intersectionPoints:l.length>0?l:void 0}},e.rayIntersectsRectangle=j,e.rayIntersectsPolygon=function(t,e){if(!P(e))return null;if(!g(e)){const n=E(e);return n?_(t,x(n)):null}return _(t,b(e.vertices))},e.lineIntersectsRay=function(t,e){return A(e,t)},e.lineIntersectsLine=C,e.lineIntersectsCircle=k,e.lineIntersectsRectangle=function(t,e){if((0,l.vectorAlmostZero)(e.size))return{intersects:!1};const n=y(e);if(N(t.start,e).intersects&&N(t.end,e).intersects)return{intersects:!0};let s=[];const r=b(n);for(const e of r){const n=C(t,e);n.intersects&&n.intersectionPoint&&s.push(n.intersectionPoint)}return s=O(s),s.length>1&&s.sort(((e,n)=>u.vec2.len(u.vec2.sub(e,t.start))-u.vec2.len(u.vec2.sub(n,t.start)))),{intersects:s.length>0,intersectionPoints:s.length>0?s:void 0}},e.lineIntersectsPolygon=function(t,e){if(!P(e))return null;if(!g(e)){const n=E(e);return n?q(t,e,x(n)):null}return q(t,e,b(e.vertices))},e.circleIntersectsCircle=function(t,e){const n=u.vec2.sub(e.position,t.position),s=u.vec2.len(n),r=t.radius+e.radius;if(s>r+d.EPSILON)return{intersects:!1};if(s<d.EPSILON&&Math.abs(t.radius-e.radius)<d.EPSILON)return{intersects:!0,minimumSeparation:u.vec2.mul(u.vec2.ux(),2*t.radius)};if(s<Math.abs(t.radius-e.radius)-d.EPSILON)return{intersects:!0,minimumSeparation:u.vec2.mul(u.vec2.nor(n),t.radius-s+e.radius)};const i=(t.radius*t.radius-e.radius*e.radius+s*s)/(2*s),o=Math.sqrt(Math.max(0,t.radius*t.radius-i*i)),c=u.vec2.add(t.position,u.vec2.mul(u.vec2.nor(n),i));if(Math.abs(s-r)<d.EPSILON)return{intersects:!0,intersectionPoints:[c],minimumSeparation:(0,u.vec2)()};const a=u.vec2.mul((0,u.vec2)({x:-n.y,y:n.x}),o/s);return{intersects:!0,intersectionPoints:[u.vec2.add(c,a),u.vec2.sub(c,a)],minimumSeparation:u.vec2.mul(u.vec2.nor(n),r-s)}},e.circleIntersectsRectangle=function(t,e){const n=b(y(e)),s=N(t.position,e),r=s.intersects,i=L(e.position,t).intersects,o=[];for(const e of n){const n=k(e,t);n.intersects&&n.intersectionPoints&&o.push(...n.intersectionPoints)}let c;if(c=Math.abs(s.distance)<d.EPSILON?(0,u.vec2)():s.distance<0?u.vec2.mul(u.vec2.nor(u.vec2.sub(s.closestPoint,t.position)),t.radius+Math.abs(s.distance)):u.vec2.mul(u.vec2.nor(u.vec2.sub(t.position,s.closestPoint)),t.radius-s.distance),(r||i)&&0===o.length)return{intersects:!0,minimumSeparation:c};const a=O(o);return a.length>0?{intersects:!0,intersectionPoints:a,minimumSeparation:c}:{intersects:!1}},e.circleIntersectsPolygon=function t(e,n,s){var r,i,o,c,a,v;if(!P(n))return null;const f=null!==(r=null==s?void 0:s.findMinimumSeparation)&&void 0!==r&&r,h=w(e.position,n),m=null!==(i=null==h?void 0:h.intersects)&&void 0!==i&&i;if(!g(n)){const r=E(n);if(!r)return null;const i=r.every((t=>{var n;const s=I(t);return!!s&&null!==(n=L(s,e).intersects)&&void 0!==n&&n})),v=x(r),h=R(e,v,m,i);if(h.intersects&&f){let i=0,v=null,f=(0,u.vec2)(),m=!0;for(;m&&(null===v||!(0,l.vectorsAlmostEqual)(v,f))&&++i<10;){let i=[],l=u.vec2.add(e.position,f);for(const t of r){const n=w(l,t);if(!n)continue;let s;s=Math.abs(n.distance)<d.EPSILON?(0,u.vec2)():n.distance<0?u.vec2.mul(u.vec2.nor(u.vec2.sub(n.closestPoint,l)),e.radius+Math.abs(n.distance)):u.vec2.mul(u.vec2.nor(u.vec2.sub(l,n.closestPoint)),e.radius-n.distance),i.push({separation:s,distance:Math.abs(n.distance)})}i=i.sort(((t,e)=>t.distance-e.distance)),v=u.vec2.cpy(f),f=u.vec2.add(f,(null===(o=i[0])||void 0===o?void 0:o.separation)||(0,u.vec2)()),m=null!==(a=null===(c=t({...e,position:u.vec2.add(e.position,u.vec2.mul(f,1.01))},n,{...s,findMinimumSeparation:!1}))||void 0===c?void 0:c.intersects)&&void 0!==a&&a}return{...h,minimumSeparation:f}}return h}const p=null!==(v=L(I(n),e).intersects)&&void 0!==v&&v,y=b(n.vertices),M=R(e,y,m,p);if(M.intersects&&f){let t;return t=Math.abs(h.distance)<d.EPSILON?(0,u.vec2)():h.distance<0?u.vec2.mul(u.vec2.nor(u.vec2.sub(h.closestPoint,e.position)),e.radius+Math.abs(h.distance)):u.vec2.mul(u.vec2.nor(u.vec2.sub(e.position,h.closestPoint)),e.radius-h.distance),{...M,minimumSeparation:t}}return M},e.rectangleIntersectsRectangle=function(t,e){if((0,l.vectorAlmostZero)(t.size)||(0,l.vectorAlmostZero)(e.size))return{intersects:!1};const n=y(t),s=y(e),r=b(n),i=b(s),o=[];for(const t of[...r,...i]){const e=u.vec2.sub(t.end,t.start),n=u.vec2.nor(u.vec2.rotf(e,-1));o.some((t=>Math.abs(u.vec2.dot(t,n))>1-d.EPSILON))||o.push(n)}let c=1/0,a=(0,u.vec2)();for(const t of o){const e=V(n,t),r=V(s,t);if(e.max<r.min||r.max<e.min)return{intersects:!1};const i=Math.min(e.max-r.min,r.max-e.min);i<c&&(c=i,a=t)}const v=[];for(const t of r)for(const e of i){const n=C(t,e);n.intersects&&n.intersectionPoint&&v.push(n.intersectionPoint)}const f=O(v),h=t.position,m=e.position,p=u.vec2.sub(m,h);u.vec2.dot(a,p)<0&&(a=u.vec2.mul(a,-1));const x=u.vec2.mul(a,c);return{intersects:!0,intersectionPoints:f.length>0?f:void 0,minimumSeparation:x}},e.rectangleIntersectsPolygon=function(t,e){if(!P(e))return null;if((0,l.vectorAlmostZero)(t.size))return{intersects:!1};return Z({vertices:y(t)},e)},e.polygonIntersectsPolygon=Z;const a=n(395),u=n(430),v=o(n(513)),l=n(955),d=o(n(388)),f=n(233);function h(t,e,n){const s=.5*Math.abs(t.x*(e.y-n.y)+e.x*(n.y-t.y)+n.x*(t.y-e.y));return Math.abs(s)<d.EPSILON}function m(t,e=1){return{start:t.origin,end:u.vec2.add(t.origin,u.vec2.mul(t.direction,e))}}function p(t){return void 0!==t.rotation&&Math.abs(t.rotation)>d.EPSILON}function y(t){const{position:e,size:n,rotation:s=0}=t,r=u.vec2.div(n,2);let i=u.vec2.fromComponents(u.vec2.swiz(r,"XY")),o=u.vec2.fromComponents(u.vec2.swiz(r,"xY")),c=u.vec2.fromComponents(u.vec2.swiz(r,"xy")),a=u.vec2.fromComponents(u.vec2.swiz(r,"Xy"));return p(t)&&(i=u.vec2.rot(i,s),o=u.vec2.rot(o,s),c=u.vec2.rot(c,s),a=u.vec2.rot(a,s)),[u.vec2.add(e,i),u.vec2.add(e,o),u.vec2.add(e,c),u.vec2.add(e,a)]}function b(t){const e=[];for(let n=0;n<t.length;n++){const s=t[n],r=(0,a.at)(t,n+1);e.push({start:s,end:r})}return e}function x(t){const e=t.flatMap((t=>b(t.vertices))),n=(t,e)=>{const n=C(t,e);return!(!n.intersects||n.intersectionPoint||(0,l.vectorsAlmostEqual)(t.end,e.start)&&!(0,l.vectorsAlmostEqual)(t.start,e.end)||(0,l.vectorsAlmostEqual)(t.start,e.end)&&!(0,l.vectorsAlmostEqual)(t.end,e.start))},s=[];for(const t of e)s.some((e=>n(e,t)))||e.some((e=>e!==t&&n(e,t)))||s.push(t);return s}function g(t){if(!P(t))return null;let e=0;for(let n=0;n<t.vertices.length;n++){const s=t.vertices[n],r=(0,a.at)(t.vertices,n+1),i=(0,a.at)(t.vertices,n+2),o=(r.x-s.x)*(i.y-s.y)-(r.y-s.y)*(i.x-s.x);if(0!==o)if(0===e)e=Math.sign(o);else if(Math.sign(o)!==e)return!1}return!0}function M(t){if(t.vertices.length<3)return!1;const e=t.vertices.length;for(let n=0;n<e;n++){const s=t.vertices[n],r=(0,a.at)(t.vertices,n+1);for(let i=n+2;i<e;i++){const o=t.vertices[i],c=(0,a.at)(t.vertices,i+1);if(0===n&&i===e-1)continue;const{intersects:u}=C({start:s,end:r},{start:o,end:c});if(u)return!0}}return!1}function P(t){return t.vertices.length>=3&&!M(t)}function z(t,e){if(!P(t))return null;let n=0;for(let e=0;e<t.vertices.length;e++){const s=t.vertices[e],r=(0,a.at)(t.vertices,e+1);n+=(r.x-s.x)*(r.y+s.y)}switch((null==e?void 0:e.coordinateSystem)||"screen"){case"cartesian":return n>0?"clockwise":"counter-clockwise";case"screen":return n>0?"counter-clockwise":"clockwise";default:return null}}function I(t){return P(t)?t.vertices.every(((t,e,n)=>h(t,(0,a.at)(n,e+1),(0,a.at)(n,e+2))))?null:u.vec2.div([...t.vertices].reduce(((t,e)=>u.vec2.add(t,e)),(0,u.vec2)()),t.vertices.length):null}function O(t){const e=[],n=t.length;for(let s=0;s<n;s++){const n=t[s];e.some((t=>(0,l.vectorsAlmostEqual)(n,t)))||e.push(n)}return e}function E(t,e){var n;if(!P(t))return null;if(g(t))return[t];const s=(null==e?void 0:e.mode)||"fast",r=null===(n=null==e?void 0:e.keepWindingOrder)||void 0===n||n,i=z(t),o=t.vertices.map((t=>[t.x,t.y]));"counter-clockwise"===i&&o.reverse();let c=[];switch(s){case"fast":c=v.quickDecomp(o);break;case"optimal":c=v.decomp(o)}const a=[];for(const t of c)a.push({vertices:t.map((t=>(0,u.vec2)(t[0],t[1])))});if(r)for(const t of a)z(t)!==i&&t.vertices.reverse();return a.length>0?a:null}function S(t,e){const n=u.vec2.sub(e.end,e.start),s=u.vec2.nor(n),r=u.vec2.sub(t,e.start),i=u.vec2.dot(r,s),o=u.vec2.len(n),c=Math.max(0,Math.min(o,i)),a=u.vec2.add(e.start,u.vec2.mul(s,c)),v=u.vec2.len(u.vec2.sub(t,a));return{intersects:v<d.EPSILON,closestPoint:a,distance:v}}function L(t,e){const n=u.vec2.sub(t,e.position),s=u.vec2.len(n),r=s<=e.radius,i=r?-(e.radius-s):s-e.radius;return{intersects:r,closestPoint:u.vec2.add(e.position,u.vec2.mul(u.vec2.nor(n),e.radius)),distance:i}}function N(t,e){if((0,l.vectorAlmostZero)(e.size)){const n=(0,l.vectorsAlmostEqual)(t,e.position);return{intersects:n,closestPoint:e.position,distance:n?0:u.vec2.len(u.vec2.sub(t,e.position))}}const n=w(t,{vertices:y(e)});if(!n)throw new Error("Invalid rectangle vertices");return n}function w(t,e){if(!P(e))return null;let n=!1;const s=e.vertices;let r=1/0,i=t;for(let e=0;e<s.length;e++){const o=(e+1)%s.length,c=s[e],a=s[o];c.y>t.y!=a.y>t.y&&t.x<(a.x-c.x)*(t.y-c.y)/(a.y-c.y)+c.x&&(n=!n);const u={start:c,end:a},{closestPoint:v,distance:l}=S(t,u),d=l*l;d<r&&(r=d,i=v)}const o=Math.sqrt(r);return{intersects:n,closestPoint:i,distance:n?-o:o}}function A(t,e){const n=u.vec2.sub(e.end,e.start),s=u.vec2.nor(t.direction);if((0,l.vectorAlmostZero)(n)||(0,l.vectorAlmostZero)(s))return{intersects:!1};const r=u.vec2.cross(s,n),i=u.vec2.sub(e.start,t.origin);if(Math.abs(r)<d.EPSILON){if(Math.abs(u.vec2.cross(i,s))<d.EPSILON){const r=u.vec2.dot(u.vec2.sub(e.start,t.origin),s),i=u.vec2.dot(u.vec2.sub(e.end,t.origin),s);if((r>=0||i>=0)&&Math.min(r,i)<=u.vec2.len(n))return{intersects:!0}}return{intersects:!1}}const o=u.vec2.cross(i,n)/r,c=u.vec2.cross(i,s)/r;return o>=0&&c>=0&&c<=1?{intersects:!0,intersectionPoint:u.vec2.add(t.origin,u.vec2.mul(s,o))}:{intersects:!1}}function j(t,e){let n=[];const s=b(y(e));for(const e of s){const s=A(t,e);s.intersects&&s.intersectionPoint&&n.push(s.intersectionPoint)}if(n=O(n),n.length>1){const e=u.vec2.nor(t.direction);n.sort(((n,s)=>u.vec2.dot(u.vec2.sub(n,t.origin),e)-u.vec2.dot(u.vec2.sub(s,t.origin),e)))}return{intersects:n.length>0,intersectionPoints:n.length>0?n:void 0}}function _(t,e){let n=[];for(const s of e){const e=A(t,s);e.intersects&&e.intersectionPoint&&n.push(e.intersectionPoint)}if(n=O(n),n.length>1){const e=u.vec2.nor(t.direction);n.sort(((n,s)=>u.vec2.dot(u.vec2.sub(n,t.origin),e)-u.vec2.dot(u.vec2.sub(s,t.origin),e)))}return{intersects:n.length>0,intersectionPoints:n.length>0?n:void 0}}function C(t,e){const n=u.vec2.sub(t.end,t.start),s=u.vec2.sub(e.end,e.start);if((0,l.vectorAlmostZero)(n)||(0,l.vectorAlmostZero)(s))return{intersects:!1};const r=u.vec2.cross(n,s),i=u.vec2.sub(e.start,t.start);if(Math.abs(r)<d.EPSILON){if(Math.abs(u.vec2.cross(i,n))<d.EPSILON){const t=u.vec2.dot(i,n)/u.vec2.dot(n,n),e=t+u.vec2.dot(s,n)/u.vec2.dot(n,n),r=Math.min(t,e),o=Math.max(t,e);if(r<=1&&o>=0)return{intersects:!0}}return{intersects:!1}}const o=u.vec2.cross(i,s)/r,c=u.vec2.cross(i,n)/r;return o>=0&&o<=1&&c>=0&&c<=1?{intersects:!0,intersectionPoint:u.vec2.add(t.start,u.vec2.mul(n,o))}:{intersects:!1}}function k(t,e){const n=u.vec2.sub(t.end,t.start),s=u.vec2.dot(n,n);if(s<d.EPSILON)return{intersects:!1};if(L(t.start,e).intersects&&L(t.end,e).intersects)return{intersects:!0};const r=u.vec2.sub(e.position,t.start),i=s,o=2*u.vec2.dot(n,u.vec2.mul(r,-1)),c=o*o-4*i*(u.vec2.dot(r,r)-e.radius*e.radius);if(c<-d.EPSILON)return{intersects:!1};if(Math.abs(c)<d.EPSILON){const e=-o/(2*i);return e>=0&&e<=1?{intersects:!0,intersectionPoints:[u.vec2.add(t.start,u.vec2.mul(n,e))]}:{intersects:!1}}const a=Math.sqrt(c),v=(-o-a)/(2*i),l=(-o+a)/(2*i);let f=[];return l<0||v>1?{intersects:!1}:(v>=0&&v<=1&&f.push(u.vec2.add(t.start,u.vec2.mul(n,v))),l>=0&&l<=1&&f.push(u.vec2.add(t.start,u.vec2.mul(n,l))),f=O(f),f.length>1&&f.sort(((e,n)=>u.vec2.len(u.vec2.sub(e,t.start))-u.vec2.len(u.vec2.sub(n,t.start)))),{intersects:f.length>0,intersectionPoints:f.length>0?f:void 0})}function q(t,e,n){const s=w({x:(t.start.x+t.end.x)/2,y:(t.start.y+t.end.y)/2},e),r=w(t.start,e),i=w(t.end,e);if((null==s?void 0:s.intersects)&&(null==r?void 0:r.intersects)&&(null==i?void 0:i.intersects))return{intersects:!0};let o=[];for(const e of n){const n=C(t,e);n.intersects&&n.intersectionPoint&&o.push(n.intersectionPoint)}return o=O(o),o.length>1&&o.sort(((e,n)=>u.vec2.len(u.vec2.sub(e,t.start))-u.vec2.len(u.vec2.sub(n,t.start)))),{intersects:o.length>0,intersectionPoints:o.length>0?o:void 0}}function R(t,e,n,s){let r=[];for(const n of e){const e=k(n,t);e.intersects&&e.intersectionPoints&&r.push(...e.intersectionPoints)}return(n||s)&&0===r.length?{intersects:!0}:(r=O(r),{intersects:r.length>0,intersectionPoints:r.length>0?r:void 0})}function V(t,e){let n=1/0,s=-1/0;for(const r of t){const t=u.vec2.dot(r,e);n=Math.min(n,t),s=Math.max(s,t)}return{min:n,max:s}}function Z(t,e){if(!P(t)||!P(e))return null;let n=[];if(g(t))n=[t];else{const e=E(t);if(!e)return null;n=e}let s=[];if(g(e))s=[e];else{const t=E(e);if(!t)return null;s=t}const r=x(n),i=x(s),o=[];for(const t of r)for(const e of i){const n=C(t,e);n.intersects&&n.intersectionPoint&&o.push(n.intersectionPoint)}if(0===o.length){if(n.map(I).filter((t=>!!t)).every((t=>{var n;return null===(n=w(t,e))||void 0===n?void 0:n.intersects})))return{intersects:!0};if(s.map(I).filter((t=>!!t)).every((e=>{var n;return null===(n=w(e,t))||void 0===n?void 0:n.intersects})))return{intersects:!0}}const c=O(o);return{intersects:c.length>0,intersectionPoints:c.length>0?c:void 0}}c(n(233),e)},233:(t,e,n)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.isPoint=r,e.isRay=function(t){return t&&"object"==typeof t&&"origin"in t&&r(t.origin)&&"direction"in t&&(0,s.isVec2)(t.direction)},e.isLine=function(t){return t&&"object"==typeof t&&"start"in t&&r(t.start)&&"end"in t&&r(t.end)},e.isCircle=function(t){return t&&"object"==typeof t&&"position"in t&&r(t.position)&&"radius"in t&&"number"==typeof t.radius},e.isAABB=function(t){return t&&"object"==typeof t&&"position"in t&&r(t.position)&&"size"in t&&(0,s.isVec2)(t.size)},e.isRectangle=function(t){return t&&"object"==typeof t&&"position"in t&&r(t.position)&&"size"in t&&(0,s.isVec2)(t.size)&&(!("rotation"in t)||"number"==typeof t.rotation)},e.isPolygon=function(t){return t&&"object"==typeof t&&"vertices"in t&&Array.isArray(t.vertices)&&t.vertices.every(r)};const s=n(197);function r(t){return(0,s.isVec2)(t)}},82:function(t,e,n){"use strict";var s,r=this&&this.__createBinding||(Object.create?function(t,e,n,s){void 0===s&&(s=n);var r=Object.getOwnPropertyDescriptor(e,n);r&&!("get"in r?!e.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return e[n]}}),Object.defineProperty(t,s,r)}:function(t,e,n,s){void 0===s&&(s=n),t[s]=e[n]}),i=this&&this.__setModuleDefault||(Object.create?function(t,e){Object.defineProperty(t,"default",{enumerable:!0,value:e})}:function(t,e){t.default=e}),o=this&&this.__importStar||(s=function(t){return s=Object.getOwnPropertyNames||function(t){var e=[];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[e.length]=n);return e},s(t)},function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n=s(t),o=0;o<n.length;o++)"default"!==n[o]&&r(e,t,n[o]);return i(e,t),e}),c=this&&this.__exportStar||function(t,e){for(var n in t)"default"===n||Object.prototype.hasOwnProperty.call(e,n)||r(e,t,n)};Object.defineProperty(e,"__esModule",{value:!0}),e.distance=function(t,e){return u.vec3.len(u.vec3.sub(t,e))},e.angle=function(t,e){if((0,v.vectorsAlmostEqual)(t,e))return(0,u.vec3)();let n=u.vec3.radx(u.vec3.sub(e,t))%(2*Math.PI);n<0&&(n+=2*Math.PI);let s=u.vec3.rady(u.vec3.sub(e,t))%(2*Math.PI);s<0&&(s+=2*Math.PI);let r=u.vec3.radz(u.vec3.sub(e,t))%(2*Math.PI);return r<0&&(r+=2*Math.PI),(0,u.vec3)(n,s,r)},e.angleBetween=function(t,e){let n=(0,d.isRay)(t)?f(t,1):t,s=(0,d.isRay)(e)?f(e,1):e;if((0,v.vectorAlmostZero)(u.vec3.sub(n.start,n.end))||(0,v.vectorAlmostZero)(u.vec3.sub(s.start,s.end)))return 0;const r=u.vec3.nor(u.vec3.sub(n.end,n.start)),i=u.vec3.nor(u.vec3.sub(s.end,s.start)),o=(0,a.clamp)(u.vec3.dot(r,i),-1,1),c=Math.acos(o);return c<0?c+2*Math.PI:c},e.pointsAreCollinear=function(t,e,n){const s=u.vec3.sub(e,t),r=u.vec3.sub(n,t),i=u.vec3.cross(s,r);return u.vec3.len(i)<l.EPSILON},e.lineToRay=function(t){return{origin:t.start,direction:u.vec3.nor(u.vec3.sub(t.end,t.start))}},e.rayToLine=f,e.aabb=function(t){if((0,d.isLine)(t))return{position:(0,u.vec3)(Math.min(t.start.x,t.end.y),Math.min(t.start.y,t.end.y),Math.min(t.start.z,t.end.z)),size:(0,u.vec3)(Math.abs(t.start.x-t.end.x),Math.abs(t.start.y-t.end.y),Math.abs(t.start.z-t.end.z))};if((0,d.isSphere)(t))return{position:t.position,size:(0,u.vec3)(2*t.radius)};if((0,d.isCuboid)(t)){const e=m(t),n=(0,u.vec3)(Math.min(...e.map((t=>t.x))),Math.min(...e.map((t=>t.y))),Math.min(...e.map((t=>t.z))));return{position:n,size:(0,u.vec3)(Math.max(...e.map((t=>t.x)))-n.x,Math.max(...e.map((t=>t.y)))-n.y,Math.max(...e.map((t=>t.z)))-n.z)}}if((0,d.isMesh)(t)||(0,d.isPolygon)(t)){const e=(0,u.vec3)(Math.min(...t.vertices.map((t=>t.x))),Math.min(...t.vertices.map((t=>t.y))),Math.min(...t.vertices.map((t=>t.z))));return{position:e,size:(0,u.vec3)(Math.max(...t.vertices.map((t=>t.x)))-e.x,Math.max(...t.vertices.map((t=>t.y)))-e.y,Math.max(...t.vertices.map((t=>t.z)))-e.z)}}return null},e.aabbToCuboid=function(t){return{position:u.vec3.add(t.position,u.vec3.div(t.size,2)),size:t.size,rotation:(0,u.vec3)(0,0,0)}},e.aabbsOverlap=function(t,e){const n=(0,v.overlapInterval)({min:t.position.x,max:t.position.x+t.size.x},{min:e.position.x,max:e.position.x+e.size.x}),s=(0,v.overlapInterval)({min:t.position.y,max:t.position.y+t.size.y},{min:e.position.y,max:e.position.y+e.size.y}),r=(0,v.overlapInterval)({min:t.position.z,max:t.position.z+t.size.z},{min:e.position.z,max:e.position.z+e.size.z});return n&&s&&r?{intersects:!0,overlap:{position:(0,u.vec3)(n.min,s.min,r.min),size:(0,u.vec3)(n.max-n.min,s.max-s.min,r.max-r.min)}}:{intersects:!1}},e.pointInAABB=function(t,e){const{position:n,size:s}=e,r=n,i=u.vec3.add(n,s),o=(0,v.valueInInterval)(t.x,{min:r.x,max:i.x})&&(0,v.valueInInterval)(t.y,{min:r.y,max:i.y})&&(0,v.valueInInterval)(t.z,{min:r.z,max:i.z});let c;if(o){const e=[{x:r.x,y:t.y,z:t.z,d:Math.abs(t.x-r.x)},{x:i.x,y:t.y,z:t.z,d:Math.abs(t.x-i.x)},{x:t.x,y:r.y,z:t.z,d:Math.abs(t.y-r.y)},{x:t.x,y:i.y,z:t.z,d:Math.abs(t.y-i.y)},{x:t.x,y:t.y,z:r.z,d:Math.abs(t.z-r.z)},{x:t.x,y:t.y,z:i.z,d:Math.abs(t.z-i.z)}].reduce(((t,e)=>t.d<e.d?t:e));c=(0,u.vec3)(e.x,e.y,e.z)}else c=(0,u.vec3)((0,a.clamp)(t.x,r.x,i.x),(0,a.clamp)(t.y,r.y,i.y),(0,a.clamp)(t.z,r.z,i.z));const l=u.vec3.len(u.vec3.sub(t,c));return{intersects:o,closestPoint:c,distance:o?-l:l}},e.cuboidIsRotated=h,e.cuboidVertices=m,e.cuboidToPolygons=p,e.verticesToEdges=y,e.polygonIsValid=b,e.polygonWindingOrder=function(t,e){if(!b(t))return null;const[n,s,r]=t.vertices,i=(null==e?void 0:e.handedness)||"right",o=u.vec3.sub(s,n),c=u.vec3.sub(r,n),a=u.vec3.cross(o,c);if((0,v.vectorAlmostZero)(a))return null;if(null==e?void 0:e.normal){const t=u.vec3.dot(u.vec3.nor(a),u.vec3.nor(e.normal));return Math.abs(t)<l.EPSILON?null:"right"===i?t>0?"counter-clockwise":"clockwise":t>0?"clockwise":"counter-clockwise"}return Math.abs(a.z)<l.EPSILON?null:"right"===i?a.z>0?"counter-clockwise":"clockwise":a.z>0?"clockwise":"counter-clockwise"},e.polygonArea=function(t){if(!b(t))return null;const[e,n,s]=t.vertices;return Math.abs(e.x*(n.y-n.x)*e.y+n.x*(s.y-s.x)*n.y+s.x*(e.y-e.x)*s.y)/2},e.polygonCentroid=x,e.polygonToPlane=function(t){if(!b(t))return null;const[e,n,s]=t.vertices,r=u.vec3.sub(n,e),i=u.vec3.sub(s,e),o=u.vec3.nor(u.vec3.cross(r,i));return{point:x(t),normal:o}},e.polygonsToMesh=function(t){if(0===t.length)return{vertices:[],indices:[]};const e=new Map,n=[];return t.forEach(((t,s)=>{if(!b(t))throw new Error(`Invalid polygon at index ${s}`);t.vertices.forEach((t=>{const s=`${t.x},${t.y},${t.z}`;e.has(s)||e.set(s,t);const r=Array.from(e.keys()).indexOf(s);n.push(r)}))})),{vertices:Array.from(e.values()),indices:n}},e.meshToPolygons=g,e.meshToEdges=function(t){if(t.indices.length%2!=0)throw new Error("Mesh indices must be a multiple of 2 to form edges");const e=[];for(let n=0;n<t.indices.length;n+=2){const s=t.indices[n],r=t.indices[n+1];if(s>=t.vertices.length||r>=t.vertices.length)throw new Error("Mesh indices out of bounds");e.push({start:t.vertices[s],end:t.vertices[r]})}return e},e.meshCentroid=function(t){return u.vec3.div(t.vertices.reduce(((t,e)=>u.vec3.add(t,e)),(0,u.vec3)()),t.vertices.length)},e.meshIsWatertight=function(t){const e=new Map;for(let n=0;n<t.indices.length;n+=3){const s=t.indices[n],r=t.indices[n+1],i=t.indices[n+2];[[Math.min(s,r),Math.max(s,r)],[Math.min(r,i),Math.max(r,i)],[Math.min(i,s),Math.max(i,s)]].forEach((([t,n])=>{const s=`${t},${n}`;e.set(s,(e.get(s)||0)+1)}))}return Array.from(e.values()).every((t=>2===t))},e.pointOnRay=function(t,e){const n=u.vec3.sub(t,e.origin),s=u.vec3.nor(e.direction),r=u.vec3.dot(n,s),i=u.vec3.add(e.origin,u.vec3.mul(s,Math.max(0,r))),o=u.vec3.len(u.vec3.sub(t,i));return{intersects:o<l.EPSILON&&r>=0,closestPoint:i,distance:o}},e.pointOnLine=M,e.pointInSphere=function(t,e){const n=u.vec3.sub(t,e.position),s=u.vec3.len(n),r=s<=e.radius,i=r?-(e.radius-s):s-e.radius;return{intersects:r,closestPoint:u.vec3.add(e.position,u.vec3.mul(u.vec3.nor(n),e.radius)),distance:i}},e.pointInCuboid=P,e.pointOnPolygon=z,e.rayTraverseGrid=function(t,e,n,s,r=-1){if(e<=0)return{cells:[]};if((r=(0,a.clamp)(-1===r?1e4:r,0,1e4))<=0)return{cells:[]};n=u.vec3.map(n,Math.floor),s=u.vec3.map(s,Math.ceil);const i=u.vec3.nor(t.direction);if((0,v.vectorAlmostZero)(i))return{cells:[]};const o=[];let c=u.vec3.map(u.vec3.div(u.vec3.sub(t.origin,n),e),Math.floor);const d=u.vec3.sub(s,n);if(c.x<0||c.x>=d.x||c.y<0||c.y>=d.y||c.z<0||c.z>=d.z){const r=E(t,{position:u.vec3.add(n,u.vec3.div(u.vec3.sub(s,n),2)),size:u.vec3.sub(s,n)});if(!r.intersects||!r.intersectionPoints)return{cells:o};const i=r.intersectionPoints[0];if(c=u.vec3.map(u.vec3.div(u.vec3.sub(i,n),e),Math.floor),c.x<0||c.x>=d.x||c.y<0||c.y>=d.y||c.z<0||c.z>=d.z)return{cells:o}}const f=Math.sign(i.x),h=Math.sign(i.y),m=Math.sign(i.z),p={x:0!==i.x?Math.abs(e/i.x):1/0,y:0!==i.y?Math.abs(e/i.y):1/0,z:0!==i.z?Math.abs(e/i.z):1/0},y=(0,u.vec3)(n.x+(c.x+(f>0?1:0))*e,n.y+(c.y+(h>0?1:0))*e,n.z+(c.z+(m>0?1:0))*e),b={x:0!==i.x?Math.abs((y.x-t.origin.x)/i.x):1/0,y:0!==i.y?Math.abs((y.y-t.origin.y)/i.y):1/0,z:0!==i.z?Math.abs((y.z-t.origin.z)/i.z):1/0};Math.abs(t.origin.x-y.x)<l.EPSILON&&(b.x=p.x),Math.abs(t.origin.y-y.y)<l.EPSILON&&(b.y=p.y),Math.abs(t.origin.z-y.z)<l.EPSILON&&(b.z=p.z),o.push((0,u.vec3)(c.x,c.y,c.z));let x=1;for(;x<r&&c.x>=0&&c.x<d.x&&c.y>=0&&c.y<d.y&&c.z>=0&&c.z<d.z&&(b.x<b.y&&b.x<b.z?(b.x+=p.x,c.x+=f):b.y<b.z?(b.y+=p.y,c.y+=h):(b.z+=p.z,c.z+=m),!(c.x<0||c.x>=d.x||c.y<0||c.y>=d.y||c.z<0||c.z>=d.z));)o.push((0,u.vec3)(c.x,c.y,c.z)),x++;return{cells:o}},e.rayIntersectsRay=function(t,e){const n=u.vec3.nor(t.direction),s=u.vec3.nor(e.direction);if((0,v.vectorAlmostZero)(n)||(0,v.vectorAlmostZero)(s))return{intersects:!1};const r=u.vec3.sub(e.origin,t.origin),i=u.vec3.cross(n,s),o=u.vec3.dot(i,i);if(o<l.EPSILON){const e=u.vec3.cross(r,n);if(u.vec3.len(e)<l.EPSILON){const e=u.vec3.dot(r,n);if(e>=0)return{intersects:!0,intersectionPoint:u.vec3.add(t.origin,u.vec3.mul(n,e))}}return{intersects:!1}}const c=u.vec3.dot(r,u.vec3.cross(s,i))/o,a=u.vec3.dot(r,u.vec3.cross(n,i))/o;if(c<0||a<0)return{intersects:!1};const d=u.vec3.add(t.origin,u.vec3.mul(n,c)),f=u.vec3.add(e.origin,u.vec3.mul(s,a));return u.vec3.len(u.vec3.sub(d,f))<l.EPSILON?{intersects:!0,intersectionPoint:u.vec3.add(d,u.vec3.mul(u.vec3.sub(f,d),.5))}:{intersects:!1}},e.rayIntersectsLine=I,e.rayIntersectsSphere=function(t,e){const n=u.vec3.nor(t.direction),s=u.vec3.sub(e.position,t.origin),r=u.vec3.dot(n,n),i=2*u.vec3.dot(n,u.vec3.mul(s,-1)),o=i*i-4*r*(u.vec3.dot(s,s)-e.radius*e.radius);if(o<-l.EPSILON)return{intersects:!1};if(Math.abs(o)<l.EPSILON){const e=-i/(2*r);return e>=0?{intersects:!0,intersectionPoints:[u.vec3.add(t.origin,u.vec3.mul(n,e))]}:{intersects:!1}}const c=Math.sqrt(o),a=(-i-c)/(2*r),v=(-i+c)/(2*r);if(v<0)return{intersects:!1};const d=[];return a>=0&&d.push(u.vec3.add(t.origin,u.vec3.mul(n,a))),v>=0&&d.push(u.vec3.add(t.origin,u.vec3.mul(n,v))),{intersects:d.length>0,intersectionPoints:d.length>0?d:void 0}},e.rayIntersectsPlane=O,e.rayIntersectsCuboid=E,e.rayIntersectsPolygon=S,e.rayIntersectsMesh=function(t,e){const n=g(e),s=[];return n.forEach((e=>{const n=S(t,e);n&&n.intersects&&s.push(n.intersectionPoint)})),{intersects:s.length>0,intersectionPoints:s.length>0?s:void 0}},e.lineIntersectsRay=function(t,e){return I(e,t)},e.lineIntersectsLine=L,e.lineIntersectsSphere=N,e.lineIntersectsPlane=w,e.lineIntersectsCuboid=function(t,e){const n=u.vec3.sub(t.end,t.start),s=u.vec3.len(n);if(s<l.EPSILON){const n=P(t.start,e);return{intersects:n.intersects,intersectionPoints:n.intersects?[t.start]:void 0}}const r=u.vec3.div(n,s),{position:i,size:o,rotation:c=(0,u.vec3)()}=e;let a=u.vec3.sub(t.start,i),v=r;if(h(e)){const t=u.vec3.mul(c,-1);a=u.vec3.rota(a,t),v=u.vec3.rota(v,t)}const d=u.vec3.div(o,2),f=u.vec3.div(u.vec3.sub(u.vec3.mul(d,-1),a),v),m=u.vec3.div(u.vec3.sub(d,a),v),p=(0,u.vec3)(Math.min(f.x,m.x),Math.min(f.y,m.y),Math.min(f.z,m.z)),y=(0,u.vec3)(Math.max(f.x,m.x),Math.max(f.y,m.y),Math.max(f.z,m.z)),b=Math.max(p.x,p.y,p.z),x=Math.min(y.x,y.y,y.z);if(b>x||x<0||b>s)return{intersects:!1};const g=[];if(b>=0&&b<=s){let t=u.vec3.add(a,u.vec3.mul(v,b));h(e)&&(t=u.vec3.rota(t,c)),g.push(u.vec3.add(i,t))}if(x>b&&x>=0&&x<=s){let t=u.vec3.add(a,u.vec3.mul(v,x));h(e)&&(t=u.vec3.rota(t,c)),g.push(u.vec3.add(i,t))}return{intersects:g.length>0,intersectionPoints:g.length>0?g:void 0}},e.lineIntersectsPolygon=A,e.lineIntersectsMesh=function(t,e){const n=g(e),s=[];return n.forEach((e=>{const n=A(t,e);n&&n.intersects&&s.push(n.intersectionPoint)})),{intersects:s.length>0,intersectionPoints:s.length>0?s:void 0}},e.sphereIntersectsSphere=function(t,e){const n=u.vec3.sub(e.position,t.position),s=u.vec3.len(n),r=t.radius+e.radius;if(s>r)return{intersects:!1};if(s<l.EPSILON)return{intersects:!0,intersectionPoint:t.position,penetrationDepth:r,normal:(0,u.vec3)(1,0,0),contactPoints:{sphereA:u.vec3.add(t.position,(0,u.vec3)(t.radius,0,0)),sphereB:u.vec3.add(e.position,(0,u.vec3)(e.radius,0,0))}};const i=u.vec3.nor(n),o=r-s;return{intersects:!0,intersectionPoint:u.vec3.add(t.position,u.vec3.mul(i,t.radius+o/2)),penetrationDepth:o,normal:i,contactPoints:{sphereA:u.vec3.add(t.position,u.vec3.mul(i,t.radius)),sphereB:u.vec3.add(e.position,u.vec3.mul(i,-e.radius))}}},e.sphereIntersectsPlane=j,e.sphereIntersectsCuboid=function(t,e){const{position:n,size:s,rotation:r=(0,u.vec3)()}=e,i=u.vec3.div(s,2);let o=u.vec3.sub(t.position,n);h(e)&&(o=u.vec3.rota(o,u.vec3.mul(r,-1)));let c=(0,u.vec3)((0,a.clamp)(o.x,-i.x,i.x),(0,a.clamp)(o.y,-i.y,i.y),(0,a.clamp)(o.z,-i.z,i.z));h(e)&&(c=u.vec3.rota(c,r)),c=u.vec3.add(c,n);const v=u.vec3.sub(t.position,c),d=u.vec3.len(v);if(d>t.radius)return{intersects:!1};if(d<l.EPSILON){let e=u.vec3.nor(u.vec3.sub(t.position,n));const s=t.radius;return{intersects:!0,intersectionPoint:t.position,penetrationDepth:s,normal:e,contactPoint:c}}const f=u.vec3.nor(v),m=t.radius-d;return{intersects:!0,intersectionPoint:u.vec3.add(c,u.vec3.mul(f,m/2)),penetrationDepth:m,normal:f,contactPoint:c}},e.sphereIntersectsPolygon=_,e.sphereIntersectsMesh=function(t,e){const n=g(e);let s=!1;const r=[],i=[];return n.forEach((e=>{const n=_(t,e);n&&n.intersects&&(s=!0,r.push(n.intersectionPoint),n.polygonIntersectionPoints&&i.push(...n.polygonIntersectionPoints))})),{intersects:s,intersectionPoints:r.length>0?r:void 0,polygonIntersectionPoints:i.length>0?i:void 0}},e.planeIntersectsPlane=C,e.planeIntersectsMesh=function(t,e){return T(e,t)},e.cuboidIntersectsCuboid=function(t,e){const{position:n,size:s,rotation:r=(0,u.vec3)()}=t,{position:i,size:o,rotation:c=(0,u.vec3)()}=e,a=u.vec3.div(s,2),v=u.vec3.div(o,2),d=h(t)?k(r):null,f=h(e)?k(c):null,m=q(d),p=q(f),y=u.vec3.sub(i,n),b=[...m,...p,...R(m,p)];let x=1/0,g=null;for(const t of b){const e=u.vec3.len(t);if(e<l.EPSILON)continue;const n=u.vec3.div(t,e),s=u.vec3.dot(y,n),r=V(a,d,n)+V(v,f,n)-Math.abs(s);if(r<=0)return{intersects:!1};r<x&&(x=r,g=n)}if(!g)return{intersects:!0};const M=u.vec3.dot(y,g)<0?u.vec3.mul(g,-1):g,P=Z(t,M),z=Z(e,u.vec3.mul(M,-1));return{intersects:!0,intersectionPoint:u.vec3.add(P,u.vec3.mul(u.vec3.sub(z,P),.5)),penetrationDepth:x,normal:M,contactPoints:{cuboidA:P,cuboidB:z}}},e.cuboidIntersectsPlane=function(t,e){const n=p(t),s=[],r=u.vec3.nor(e.normal);let i,o=-1/0,c=1/0;m(t).forEach((t=>{const n=u.vec3.dot(u.vec3.sub(t,e.point),r);o=Math.max(o,n),c=Math.min(c,n)}));for(const t of n){const n=$(t,e);(null==n?void 0:n.intersects)&&n.intersectionPoints&&n.intersectionPoints.forEach((t=>{s.some((e=>u.vec3.len(u.vec3.sub(e,t))<l.EPSILON))||s.push(t)}))}return i=c*o<=0?Math.max(Math.abs(c),Math.abs(o)):Math.abs(o)<Math.abs(c)?Math.abs(o):Math.abs(c),{intersects:s.length>0,intersectionPoints:s.length>0?s:void 0,penetrationDepth:i}},e.cuboidIntersectsPolygon=D,e.cuboidIntersectsMesh=function(t,e){const n=g(e),s=[];for(const e of n){const n=D(t,e);if(n&&n.intersects){if(!n.intersectionPoints)return{intersects:!0};n.intersectionPoints.forEach((t=>{s.some((e=>(0,v.vectorsAlmostEqual)(e,t)))||s.push(t)}))}}return{intersects:s.length>0,intersectionPoints:s.length>0?s:void 0}},e.polygonIntersectsPolygon=B,e.polygonIntersectsPlane=$,e.polygonIntersectsMesh=function(t,e){if(!b(t))return null;const n=g(e),s=[];for(const e of n){const n=B(t,e);if(n&&n.intersects){if(!n.intersectionPoints)return{intersects:!0};n.intersectionPoints.forEach((t=>{s.some((e=>(0,v.vectorsAlmostEqual)(e,t)))||s.push(t)}))}}return{intersects:s.length>0,intersectionPoints:s.length>0?s:void 0}},e.meshIntersectsMesh=function(t,e){const n=g(t),s=g(e),r=[];for(const t of n)for(const e of s){const n=B(t,e);n&&n.intersects&&n.intersectionPoints&&n.intersectionPoints.forEach((t=>{r.some((e=>u.vec3.len(u.vec3.sub(e,t))<l.EPSILON))||r.push(t)}))}return{intersects:r.length>0,intersectionPoints:r.length>0?r:void 0}},e.meshIntersectsPlane=T;const a=n(395),u=n(430),v=n(955),l=o(n(388)),d=n(962);function f(t,e=1){return{start:t.origin,end:u.vec3.add(t.origin,u.vec3.mul(t.direction,e))}}function h(t){return void 0!==t.rotation&&!(0,v.vectorAlmostZero)(t.rotation)}function m(t){const{position:e,size:n,rotation:s=(0,u.vec3)()}=t,r=u.vec3.div(n,2);let i=u.vec3.fromComponents(u.vec3.swiz(r,"XYz")),o=u.vec3.fromComponents(u.vec3.swiz(r,"xYz")),c=u.vec3.fromComponents(u.vec3.swiz(r,"xyz")),a=u.vec3.fromComponents(u.vec3.swiz(r,"Xyz")),v=u.vec3.fromComponents(u.vec3.swiz(r,"XYZ")),l=u.vec3.fromComponents(u.vec3.swiz(r,"xYZ")),d=u.vec3.fromComponents(u.vec3.swiz(r,"xyZ")),f=u.vec3.fromComponents(u.vec3.swiz(r,"XyZ"));return h(t)&&(i=u.vec3.rota(i,s),o=u.vec3.rota(o,s),c=u.vec3.rota(c,s),a=u.vec3.rota(a,s),v=u.vec3.rota(v,s),l=u.vec3.rota(l,s),d=u.vec3.rota(d,s),f=u.vec3.rota(f,s)),[u.vec3.add(e,i),u.vec3.add(e,o),u.vec3.add(e,c),u.vec3.add(e,a),u.vec3.add(e,v),u.vec3.add(e,l),u.vec3.add(e,d),u.vec3.add(e,f)]}function p(t){const e=m(t);if(8!==e.length)throw new Error("Cuboid must have exactly 8 vertices");return[{vertices:[e[0],e[1],e[2]]},{vertices:[e[0],e[2],e[3]]},{vertices:[e[4],e[5],e[6]]},{vertices:[e[4],e[6],e[7]]},{vertices:[e[0],e[1],e[5]]},{vertices:[e[0],e[5],e[4]]},{vertices:[e[2],e[3],e[7]]},{vertices:[e[2],e[7],e[6]]},{vertices:[e[0],e[3],e[7]]},{vertices:[e[0],e[7],e[4]]},{vertices:[e[1],e[2],e[6]]},{vertices:[e[1],e[6],e[5]]}]}function y(t){const e=[];for(let n=0;n<t.length;n++){const s=t[n],r=(0,a.at)(t,n+1);e.push({start:s,end:r})}return e}function b(t){return 3===t.vertices.length}function x(t){return b(t)?u.vec3.div(u.vec3.add(t.vertices[0],u.vec3.add(t.vertices[1],t.vertices[2])),3):null}function g(t){if(t.indices.length%3!=0)throw new Error("Mesh indices must be a multiple of 3 to form triangles");const e=[];for(let n=0;n<t.indices.length;n+=3){const s=t.indices.slice(n,n+3);if(3!==s.length)throw new Error("Mesh indices must form triangles");const r=s.map((e=>t.vertices[e]));e.push({vertices:r})}return e}function M(t,e){const n=u.vec3.sub(e.end,e.start),s=u.vec3.nor(n),r=u.vec3.sub(t,e.start),i=u.vec3.dot(r,s),o=u.vec3.len(n),c=Math.max(0,Math.min(o,i)),a=u.vec3.add(e.start,u.vec3.mul(s,c)),v=u.vec3.len(u.vec3.sub(t,a));return{intersects:v<l.EPSILON,closestPoint:a,distance:v}}function P(t,e){const{position:n,size:s,rotation:r=(0,u.vec3)()}=e,i=u.vec3.div(s,2);let o=u.vec3.sub(t,n);h(e)&&(o=u.vec3.rota(o,u.vec3.mul(r,-1)));const c=Math.max(Math.abs(o.x)-i.x,0),v=Math.max(Math.abs(o.y)-i.y,0),l=Math.max(Math.abs(o.z)-i.z,0);let d=(0,u.vec3)((0,a.clamp)(o.x,-i.x,i.x),(0,a.clamp)(o.y,-i.y,i.y),(0,a.clamp)(o.z,-i.z,i.z));h(e)&&(d=u.vec3.rota(d,r)),d=u.vec3.add(d,n);const f=0===c&&0===v&&0===l;return{intersects:f,closestPoint:d,distance:f?-Math.min(i.x-Math.abs(o.x),i.y-Math.abs(o.y),i.z-Math.abs(o.z)):Math.sqrt(c*c+v*v+l*l)}}function z(t,e){if(!b(e))return null;const[n,s,r]=e.vertices,i=u.vec3.sub(s,n),o=u.vec3.sub(r,n),c=u.vec3.nor(u.vec3.cross(i,o)),a=-u.vec3.dot(c,n),v=u.vec3.dot(c,t)+a,d=u.vec3.sub(t,u.vec3.mul(c,v)),f=u.vec3.len(u.vec3.cross(i,o))/2,h=u.vec3.sub(r,s),m=u.vec3.sub(d,n),p=u.vec3.sub(d,s),y=u.vec3.sub(d,r),x=u.vec3.len(u.vec3.cross(h,p))/(2*f),g=u.vec3.len(u.vec3.cross(o,y))/(2*f),P=u.vec3.len(u.vec3.cross(i,m))/(2*f),z=x+g+P;let I,O;if(x>=-l.EPSILON&&g>=-l.EPSILON&&P>=-l.EPSILON&&Math.abs(z-1)<l.EPSILON)I=d,O=Math.abs(v);else{const e=M(t,{start:n,end:s}),i=M(t,{start:s,end:r}),o=M(t,{start:r,end:n}),c=Math.min(e.distance,i.distance,o.distance);I=c===e.distance?e.closestPoint:c===i.distance?i.closestPoint:o.closestPoint,O=c}return{intersects:O<l.EPSILON,closestPoint:I,distance:O}}function I(t,e){let n=u.vec3.sub(e.end,e.start);const s=u.vec3.len(n);if(s<l.EPSILON)return{intersects:!1};const r=u.vec3.nor(t.direction);n=u.vec3.div(n,s);const i=u.vec3.sub(e.start,t.origin),o=u.vec3.cross(r,n),c=u.vec3.dot(o,o);if(c<l.EPSILON){const t=u.vec3.cross(i,r);if(u.vec3.len(t)<l.EPSILON){const t=u.vec3.dot(i,n);if(t>=0&&t<=s)return{intersects:!0,intersectionPoint:u.vec3.add(e.start,u.vec3.mul(n,t))}}return{intersects:!1}}const a=u.vec3.dot(i,u.vec3.cross(n,o))/c,v=u.vec3.dot(i,u.vec3.cross(r,o))/c;if(a>=0&&v>=0&&v<=s){const s=u.vec3.add(t.origin,u.vec3.mul(r,a)),i=u.vec3.add(e.start,u.vec3.mul(n,v));if(u.vec3.len(u.vec3.sub(s,i))<l.EPSILON)return{intersects:!0,intersectionPoint:u.vec3.add(s,u.vec3.mul(u.vec3.sub(i,s),.5))}}return{intersects:!1}}function O(t,e){const n=u.vec3.nor(t.direction),s=u.vec3.nor(e.normal),r=u.vec3.dot(n,s);if(Math.abs(r)<l.EPSILON){const n=u.vec3.dot(u.vec3.sub(t.origin,e.point),s);return Math.abs(n)<l.EPSILON?{intersects:!0}:{intersects:!1}}const i=u.vec3.dot(u.vec3.sub(e.point,t.origin),s)/r;return i<0?{intersects:!1}:{intersects:!0,intersectionPoint:u.vec3.add(t.origin,u.vec3.mul(n,i))}}function E(t,e){const n=u.vec3.nor(t.direction),{position:s,size:r,rotation:i=(0,u.vec3)()}=e;let o=u.vec3.sub(t.origin,s),c=n;if(h(e)){const t=u.vec3.mul(i,-1);o=u.vec3.rota(o,t),c=u.vec3.rota(c,t)}const a=u.vec3.div(r,2),v=u.vec3.div(u.vec3.sub(u.vec3.mul(a,-1),o),c),l=u.vec3.div(u.vec3.sub(a,o),c),d=(0,u.vec3)(Math.min(v.x,l.x),Math.min(v.y,l.y),Math.min(v.z,l.z)),f=(0,u.vec3)(Math.max(v.x,l.x),Math.max(v.y,l.y),Math.max(v.z,l.z)),m=Math.max(d.x,d.y,d.z),p=Math.min(f.x,f.y,f.z);if(m>p||p<0)return{intersects:!1};const y=[];if(m>=0){let t=u.vec3.add(o,u.vec3.mul(c,m));h(e)&&(t=u.vec3.rota(t,i)),y.push(u.vec3.add(s,t))}if(p>m&&p>=0){let t=u.vec3.add(o,u.vec3.mul(c,p));h(e)&&(t=u.vec3.rota(t,i)),y.push(u.vec3.add(s,t))}return{intersects:y.length>0,intersectionPoints:y.length>0?y:void 0}}function S(t,e){if(!b(e))return null;const[n,s,r]=e.vertices,i=u.vec3.sub(s,n),o=u.vec3.sub(r,n),c=O(t,{point:n,normal:u.vec3.nor(u.vec3.cross(i,o))});if(!c.intersects||!c.intersectionPoint)return{intersects:!1};const a=z(c.intersectionPoint,e);return a&&a.intersects?{intersects:!0,intersectionPoint:c.intersectionPoint}:{intersects:!1}}function L(t,e){const n=u.vec3.sub(t.end,t.start),s=u.vec3.sub(e.end,e.start),r=u.vec3.len(n),i=u.vec3.len(s);if(r<l.EPSILON||i<l.EPSILON)return{intersects:!1};const o=u.vec3.div(n,r),c=u.vec3.div(s,i),v=u.vec3.sub(e.start,t.start),d=u.vec3.cross(o,c),f=u.vec3.dot(d,d);if(f<l.EPSILON){const e=u.vec3.cross(v,o);if(u.vec3.len(e)<l.EPSILON){const e=u.vec3.dot(v,o),n=e+u.vec3.dot(s,o),i=Math.min(e,n),c=Math.max(e,n);if(i<=r&&c>=0){const e=(0,a.clamp)(0,Math.max(0,i),r);return{intersects:!0,intersectionPoint:u.vec3.add(t.start,u.vec3.mul(o,e))}}}return{intersects:!1}}const h=u.vec3.dot(v,u.vec3.cross(s,d))/f,m=u.vec3.dot(v,u.vec3.cross(n,d))/f;if(h>=0&&h<=r&&m>=0&&m<=i){const n=u.vec3.add(t.start,u.vec3.mul(o,h)),s=u.vec3.add(e.start,u.vec3.mul(c,m));if(u.vec3.len(u.vec3.sub(n,s))<l.EPSILON)return{intersects:!0,intersectionPoint:u.vec3.add(n,u.vec3.mul(u.vec3.sub(s,n),.5))}}return{intersects:!1}}function N(t,e){const n=u.vec3.sub(t.end,t.start),s=u.vec3.len(n);if(s<l.EPSILON)return u.vec3.len(u.vec3.sub(t.start,e.position))<=e.radius?{intersects:!0,intersectionPoints:[t.start]}:{intersects:!1};const r=u.vec3.div(n,s),i=u.vec3.sub(e.position,t.start),o=u.vec3.dot(r,r),c=2*u.vec3.dot(r,u.vec3.mul(i,-1)),a=c*c-4*o*(u.vec3.dot(i,i)-e.radius*e.radius);if(a<-l.EPSILON)return{intersects:!1};if(Math.abs(a)<l.EPSILON){const e=-c/(2*o);return e>=0&&e<=s?{intersects:!0,intersectionPoints:[u.vec3.add(t.start,u.vec3.mul(r,e))]}:{intersects:!1}}const v=Math.sqrt(a),d=(-c-v)/(2*o),f=(-c+v)/(2*o),h=[];return d>=0&&d<=s&&h.push(u.vec3.add(t.start,u.vec3.mul(r,d))),f>=0&&f<=s&&h.push(u.vec3.add(t.start,u.vec3.mul(r,f))),{intersects:h.length>0,intersectionPoints:h.length>0?h:void 0}}function w(t,e){const n=u.vec3.sub(t.end,t.start),s=u.vec3.len(n);if(s<l.EPSILON)return{intersects:!1};const r=u.vec3.div(n,s),i=u.vec3.dot(r,e.normal);if(Math.abs(i)<l.EPSILON){const n=u.vec3.dot(u.vec3.sub(t.start,e.point),e.normal);return Math.abs(n)<l.EPSILON?{intersects:!0}:{intersects:!1}}const o=u.vec3.dot(u.vec3.sub(e.point,t.start),e.normal)/i;return o<0||o>s?{intersects:!1}:{intersects:!0,intersectionPoint:u.vec3.add(t.start,u.vec3.mul(r,o))}}function A(t,e){if(!b(e))return{intersects:!1};const[n,s,r]=e.vertices,i=u.vec3.sub(s,n),o=u.vec3.sub(r,n),c=w(t,{point:n,normal:u.vec3.nor(u.vec3.cross(i,o))});if(!c.intersects||!c.intersectionPoint)return{intersects:!1};const a=z(c.intersectionPoint,e);return a&&a.intersects?{intersects:!0,intersectionPoint:c.intersectionPoint}:{intersects:!1}}function j(t,e){const n=u.vec3.nor(e.normal),s=u.vec3.dot(u.vec3.sub(t.position,e.point),n);if(Math.abs(s)>t.radius)return{intersects:!1};const r=t.radius-Math.abs(s);return{intersects:!0,intersectionPoint:u.vec3.sub(t.position,u.vec3.mul(n,s)),penetrationDepth:r,intersectionRadius:Math.sqrt(t.radius*t.radius-s*s)}}function _(t,e){if(!b(e))return null;const[n,s,r]=e.vertices,i=u.vec3.sub(s,n),o=u.vec3.sub(r,n),c=u.vec3.nor(u.vec3.cross(i,o)),a=j(t,{point:n,normal:c});if(!a.intersects)return{intersects:!1};if(e.vertices.map((e=>u.vec3.len(u.vec3.sub(e,t.position)))).every((e=>e<=t.radius)))return{intersects:!0,intersectionPoint:a.intersectionPoint,penetrationDepth:t.radius};const v=[];[{start:n,end:s},{start:s,end:r},{start:r,end:n}].forEach((e=>{const n=N(e,t);n.intersects&&n.intersectionPoints&&n.intersectionPoints.forEach((t=>{M(t,e).intersects&&v.push(t)}))}));const l=z(t.position,e);if(l&&l.intersects){const e=u.vec3.len(u.vec3.sub(t.position,l.closestPoint));if(e<=t.radius)return{intersects:!0,intersectionPoint:l.closestPoint,penetrationDepth:t.radius-e,polygonIntersectionPoints:v.length>0?v:void 0}}if(v.length>0){const e=u.vec3.div(v.reduce(((t,e)=>u.vec3.add(t,e)),(0,u.vec3)()),v.length);return{intersects:!0,intersectionPoint:e,penetrationDepth:t.radius-u.vec3.len(u.vec3.sub(e,t.position)),polygonIntersectionPoints:v}}return{intersects:!1}}function C(t,e){const n=u.vec3.nor(t.normal),s=u.vec3.nor(e.normal),r=u.vec3.cross(n,s),i=u.vec3.dot(r,r);if(i<l.EPSILON){const s=u.vec3.dot(u.vec3.sub(e.point,t.point),n);return Math.abs(s)<l.EPSILON?{intersects:!0}:{intersects:!1}}const o=-u.vec3.dot(n,t.point),c=-u.vec3.dot(s,e.point),a=u.vec3.div(u.vec3.cross(u.vec3.sub(u.vec3.mul(n,c),u.vec3.mul(s,o)),r),i);return{intersects:!0,intersectionLine:{start:a,end:u.vec3.add(a,r)}}}function k(t){const e=Math.cos(t.x),n=Math.cos(t.y),s=Math.cos(t.z),r=Math.sin(t.x),i=Math.sin(t.y),o=Math.sin(t.z);return[(0,u.vec3)(n*s,n*o,-i),(0,u.vec3)(r*i*s-e*o,r*i*o+e*s,r*n),(0,u.vec3)(e*i*s+r*o,e*i*o-r*s,e*n)]}function q(t){return t||[(0,u.vec3)(1,0,0),(0,u.vec3)(0,1,0),(0,u.vec3)(0,0,1)]}function R(t,e){const n=[];for(const s of t)for(const t of e)n.push(u.vec3.cross(s,t));return n}function V(t,e,n){let s=0;return s=e?Math.abs(u.vec3.dot(u.vec3.mul(e[0],t.x),n))+Math.abs(u.vec3.dot(u.vec3.mul(e[1],t.y),n))+Math.abs(u.vec3.dot(u.vec3.mul(e[2],t.z),n)):Math.abs(t.x*n.x)+Math.abs(t.y*n.y)+Math.abs(t.z*n.z),s}function Z(t,e){const n=m(t);let s=-1/0,r=n[0];for(const t of n){const n=u.vec3.dot(t,e);n>s&&(s=n,r=t)}return r}function D(t,e){if(!b(e))return null;const n=e.vertices.map((e=>P(e,t)));if(n.every((t=>t.intersects)))return{intersects:!0};const s=m(t),r=s.map((t=>z(t,e)));if(r.some((t=>null==t?void 0:t.intersects)))return{intersects:!0};const i=y(s),o=[];for(const t of i){const n=A(t,e);n&&n.intersects&&n.intersectionPoint&&(o.some((t=>(0,v.vectorsAlmostEqual)(t,n.intersectionPoint)))||o.push(n.intersectionPoint))}const c=y(e.vertices),a=p(t);for(const t of c)for(const e of a){const n=A(t,e);n&&n.intersects&&n.intersectionPoint&&(o.some((t=>(0,v.vectorsAlmostEqual)(t,n.intersectionPoint)))||o.push(n.intersectionPoint))}return{intersects:o.length>0||n.some((t=>t.intersects))||r.some((t=>null==t?void 0:t.intersects)),intersectionPoints:o.length>0?o:void 0}}function B(t,e){if(!b(t)||!b(e))return null;const n=C({point:t.vertices[0],normal:u.vec3.nor(u.vec3.cross(u.vec3.sub(t.vertices[1],t.vertices[0]),u.vec3.sub(t.vertices[2],t.vertices[0])))},{point:e.vertices[0],normal:u.vec3.nor(u.vec3.cross(u.vec3.sub(e.vertices[1],e.vertices[0]),u.vec3.sub(e.vertices[2],e.vertices[0])))});if(!n.intersects)return{intersects:!1};if(!n.intersectionLine){for(const n of t.vertices){const t=z(n,e);if(null==t?void 0:t.intersects)return{intersects:!0}}for(const n of e.vertices){const e=z(n,t);if(null==e?void 0:e.intersects)return{intersects:!0}}return{intersects:!1}}const s=y(t.vertices),r=y(e.vertices),i=[];for(const t of s)for(const e of r){const n=L(t,e);if(n.intersects&&n.intersectionPoint){const s=M(n.intersectionPoint,t),r=M(n.intersectionPoint,e);s.intersects&&r.intersects&&(i.some((t=>u.vec3.len(u.vec3.sub(t,n.intersectionPoint))<l.EPSILON))||i.push(n.intersectionPoint))}}return{intersects:i.length>0,intersectionPoints:i.length>0?i:void 0}}function $(t,e){if(!b(t))return null;const n=y(t.vertices),s=[];let r=!1;for(const t of n){const n=w(t,e);if(n.intersects){if(!n.intersectionPoint){r=!0;break}s.push(n.intersectionPoint)}}if(r)return{intersects:!0};const i=s.filter(((t,e)=>!s.some(((n,s)=>s<e&&u.vec3.len(u.vec3.sub(n,t))<l.EPSILON))));return{intersects:i.length>0,intersectionPoints:i.length>0?i:void 0}}function T(t,e){const n=g(t),s=[];let r=-1/0,i=1/0;const o=u.vec3.nor(e.normal);t.vertices.forEach((t=>{const n=u.vec3.dot(u.vec3.sub(t,e.point),o);r=Math.max(r,n),i=Math.min(i,n)}));let c,a=!1;for(const t of n){const n=$(t,e);(null==n?void 0:n.intersects)&&(a=!0,n.intersectionPoints&&n.intersectionPoints.forEach((t=>{s.some((e=>u.vec3.len(u.vec3.sub(e,t))<l.EPSILON))||s.push(t)})))}return c=i*r<=0?Math.max(Math.abs(i),Math.abs(r)):Math.abs(r)<Math.abs(i)?Math.abs(r):Math.abs(i),{intersects:a,intersectionPoints:s.length>0?s:void 0,penetrationDepth:c}}c(n(962),e)},962:(t,e,n)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.isPoint=r,e.isRay=function(t){return t&&"object"==typeof t&&"origin"in t&&r(t.origin)&&"direction"in t&&(0,s.isVec3)(t.direction)},e.isLine=function(t){return t&&"object"==typeof t&&"start"in t&&r(t.start)&&"end"in t&&r(t.end)},e.isSphere=function(t){return t&&"object"==typeof t&&"position"in t&&r(t.position)&&"radius"in t&&"number"==typeof t.radius},e.isAABB=function(t){return t&&"object"==typeof t&&"position"in t&&r(t.position)&&"size"in t&&(0,s.isVec3)(t.size)},e.isCuboid=function(t){return t&&"object"==typeof t&&"position"in t&&r(t.position)&&"size"in t&&(0,s.isVec3)(t.size)&&(!("rotation"in t)||(0,s.isVec3)(t.rotation))},e.isPlane=function(t){return t&&"object"==typeof t&&"point"in t&&r(t.point)&&"normal"in t&&(0,s.isVec3)(t.normal)},e.isPolygon=function(t){return t&&"object"==typeof t&&"vertices"in t&&Array.isArray(t.vertices)&&3===t.vertices.length&&t.vertices.every(r)&&!("indices"in t)},e.isMesh=function(t){return t&&"object"==typeof t&&"vertices"in t&&Array.isArray(t.vertices)&&t.vertices.every(r)&&"indices"in t&&Array.isArray(t.indices)&&t.indices.every((t=>"number"==typeof t))};const s=n(197);function r(t){return(0,s.isVec3)(t)}},607:function(t,e,n){"use strict";var s,r=this&&this.__createBinding||(Object.create?function(t,e,n,s){void 0===s&&(s=n);var r=Object.getOwnPropertyDescriptor(e,n);r&&!("get"in r?!e.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return e[n]}}),Object.defineProperty(t,s,r)}:function(t,e,n,s){void 0===s&&(s=n),t[s]=e[n]}),i=this&&this.__setModuleDefault||(Object.create?function(t,e){Object.defineProperty(t,"default",{enumerable:!0,value:e})}:function(t,e){t.default=e}),o=this&&this.__importStar||(s=function(t){return s=Object.getOwnPropertyNames||function(t){var e=[];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[e.length]=n);return e},s(t)},function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n=s(t),o=0;o<n.length;o++)"default"!==n[o]&&r(e,t,n[o]);return i(e,t),e});Object.defineProperty(e,"__esModule",{value:!0}),e.intersectionUtilities=e.intersection3d=e.intersection2d=void 0,e.intersection2d=o(n(674)),e.intersection3d=o(n(82)),e.intersectionUtilities=o(n(955))},388:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.EPSILON=void 0,e.EPSILON=1e-6},955:function(t,e,n){"use strict";var s,r=this&&this.__createBinding||(Object.create?function(t,e,n,s){void 0===s&&(s=n);var r=Object.getOwnPropertyDescriptor(e,n);r&&!("get"in r?!e.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return e[n]}}),Object.defineProperty(t,s,r)}:function(t,e,n,s){void 0===s&&(s=n),t[s]=e[n]}),i=this&&this.__setModuleDefault||(Object.create?function(t,e){Object.defineProperty(t,"default",{enumerable:!0,value:e})}:function(t,e){t.default=e}),o=this&&this.__importStar||(s=function(t){return s=Object.getOwnPropertyNames||function(t){var e=[];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[e.length]=n);return e},s(t)},function(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var n=s(t),o=0;o<n.length;o++)"default"!==n[o]&&r(e,t,n[o]);return i(e,t),e}),c=this&&this.__exportStar||function(t,e){for(var n in t)"default"===n||Object.prototype.hasOwnProperty.call(e,n)||r(e,t,n)};Object.defineProperty(e,"__esModule",{value:!0}),e.vectorAlmostZero=function(t){return(0,u.isVec3)(t)?Math.abs(t.x)<a.EPSILON&&Math.abs(t.y)<a.EPSILON&&Math.abs(t.z)<a.EPSILON:!!(0,u.isVec2)(t)&&Math.abs(t.x)<a.EPSILON&&Math.abs(t.y)<a.EPSILON},e.vectorsAlmostEqual=function(t,e){return(0,u.isVec3)(t)&&(0,u.isVec3)(e)?Math.abs(t.x-e.x)<a.EPSILON&&Math.abs(t.y-e.y)<a.EPSILON&&Math.abs(t.z-e.z)<a.EPSILON:!(!(0,u.isVec2)(t)||!(0,u.isVec2)(e))&&Math.abs(t.x-e.x)<a.EPSILON&&Math.abs(t.y-e.y)<a.EPSILON},e.valueInInterval=function(t,e){const{min:n,minInclusive:s=!0,max:r,maxInclusive:i=!0}=e;return(s?t>=n:t>n)&&(i?t<=r:t<r)},e.intervalsOverlap=v,e.overlapInterval=function(t,e){return v(t,e)?{min:Math.max(t.min,e.min),max:Math.min(t.max,e.max)}:null};const a=o(n(388)),u=n(197);function v(t,e){return Math.max(t.min,e.min)<=Math.min(t.max,e.max)}c(n(197),e)},197:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.isVec2=function(t){return t&&"object"==typeof t&&"x"in t&&"number"==typeof t.x&&"y"in t&&"number"==typeof t.y&&!("z"in t)},e.isVec3=function(t){return t&&"object"==typeof t&&"x"in t&&"number"==typeof t.x&&"y"in t&&"number"==typeof t.y&&"z"in t&&"number"==typeof t.z}}},e={},function n(s){var r=e[s];if(void 0!==r)return r.exports;var i=e[s]={exports:{}};return t[s].call(i.exports,i,i.exports,n),i.exports}(607);var t,e}));